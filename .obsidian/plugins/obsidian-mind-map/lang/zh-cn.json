{
    "manifest": {
        "translationVersion": 1730043259260,
        "pluginVersion": "1.1.0"
    },
    "description": {
        "original": "A plugin to preview notes as Markmap mind maps",
        "translation": "A plugin to preview notes as Markmap mind maps"
    },
    "dict": {
        "Notice('Screenshot copied to the clipboard.')": "Notice('Screenshot copied to the clipboard.')",
        ".log(arg.reverse()": ".log(arg.reverse()",
        ".log(tok, context.macros.get(name)": ".log(tok, context.macros.get(name)",
        ".log(`Found numeric literal: ${token.content}`)": ".log(`Found numeric literal: ${token.content}`)",
        ".log(w1 / w0)": ".log(w1 / w0)",
        ".log(Math.sqrt(b0 * b0 + 1)": ".log(Math.sqrt(b0 * b0 + 1)",
        ".log(Math.sqrt(b1 * b1 + 1)": ".log(Math.sqrt(b1 * b1 + 1)",
        ".log(\"Loading Mind Map plugin\")": ".log(\"Loading Mind Map plugin\")",
        ".log(\"Unloading Mind Map plugin\")": ".log(\"Unloading Mind Map plugin\")",
        ".error(arg.reverse()": ".error(arg.reverse()",
        ".error(error_1)": ".error(error_1)",
        ".error(error)": ".error(error)",
        "name: 'latin'": "name: 'latin'",
        "name: 'cyrillic'": "name: 'cyrillic'",
        "name: 'brahmic'": "name: 'brahmic'",
        "name: 'georgian'": "name: 'georgian'",
        "name: \"cjk\"": "name: \"cjk\"",
        "name: 'hangul'": "name: 'hangul'",
        "name : \"\"), token);\n    } else if (this.mode === \"": "name : \"\"), token);\n    } else if (this.mode === \"",
        "name: 'Preview the current note as a Mind Map'": "name: 'Preview the current note as a Mind Map'",
        "link: \"http://www.w3.org/1999/xlink\"": "link: \"http://www.w3.org/1999/xlink\"",
        "text: \"\\\\prime\"": "text: \"\\\\prime\"",
        "text: \"---\"": "text: \"---\"",
        "text: \"--\"": "text: \"--\"",
        ".setName('Preview Split')": ".setName('Preview Split')",
        ".setName('Node Min Height')": ".setName('Node Min Height')",
        ".setName('Node Text Line Height')": ".setName('Node Text Line Height')",
        ".setName('Vertical Spacing')": ".setName('Vertical Spacing')",
        ".setName('Horizontal Spacing')": ".setName('Horizontal Spacing')",
        ".setName('Horizontal padding')": ".setName('Horizontal padding')",
        ".setDesc('Split direction for the Mind Map Preview')": ".setDesc('Split direction for the Mind Map Preview')",
        ".setDesc('Minimum height for the mind map nodes')": ".setDesc('Minimum height for the mind map nodes')",
        ".setDesc('Line height for content in mind map nodes')": ".setDesc('Line height for content in mind map nodes')",
        ".setDesc('Vertical spacing of the mind map nodes')": ".setDesc('Vertical spacing of the mind map nodes')",
        ".setDesc('Horizontal spacing of the mind map nodes')": ".setDesc('Horizontal spacing of the mind map nodes')",
        ".setDesc('Leading space before the content of mind map nodes')": ".setDesc('Leading space before the content of mind map nodes')",
        ".setPlaceholder('Example: 16')": ".setPlaceholder('Example: 16')",
        ".setPlaceholder('Example: 1em')": ".setPlaceholder('Example: 1em')",
        ".setPlaceholder('Example: 5')": ".setPlaceholder('Example: 5')",
        ".setPlaceholder('Example: 80')": ".setPlaceholder('Example: 80')",
        ".setPlaceholder('Example: 8')": ".setPlaceholder('Example: 8')",
        ".setTitle('Pin')": ".setTitle('Pin')",
        ".setTitle('Copy screenshot')": ".setTitle('Copy screenshot')",
        ".innerText = 'No content found'": ".innerText = 'No content found'"
    }
}
