export declare function nextId(): any;
export declare function calculateMinArea(minArea: any): any[];
export declare function calculateArea(type: any, area: any, offset: any): any[];
export declare function calculateBaseArea(area: any): any[];
export declare function calculateDrawerArea(offset: any, drawerArea?: string[] | string): string[];
/**
 * 计算 offset 属性
 *
 * @param offset 位置
 * @param area 尺寸
 * @param type 类型
 *
 * @return { Array } 正确位置
 */
export declare function calculateOffset(offset: any, area: any, type: any): any[];
/**
 * 转换 number 类型
 */
export declare function calculateType(modalType: number | string): 0 | 1 | 2 | 3 | 4 | 5 | 6;
/**
 * 计算 content 高度
 */
export declare function calculateContent(title: any, height: any, btn: any, type: any, isMessage?: boolean): string | undefined;
export declare function maxArea(): {
    w: string;
    h: string;
};
export declare function maxOffset(): {
    t: string;
    l: string;
};
export declare function minArea(): {
    w: string;
    h: string;
};
export declare function minOffset(left: any): {
    t: string;
    l: string;
};
export declare function getPosition(dom: any): {
    x: any;
    y: any;
};
export declare function getArea(dom: any): string[];
export declare function updateMinArrays(id: string, state: Boolean): number;
/**
 * 根据 offset 返回 anim 动画
 */
export declare function getDrawerAnimationClass(offset: any, isClose?: boolean): string;
/**
 * 计算 image 尺寸, 缩放尺寸
 */
export declare function calculatePhotosArea(url: string, options: object): Promise<Array<string>>;
export declare function calculateNotifOffset(offset: any, area: any, layerId: string): string[];
export declare function removeNotifiyFromQueen(layerId: string): void;
export declare function getNotifyAnimationClass(offset: any): string;
