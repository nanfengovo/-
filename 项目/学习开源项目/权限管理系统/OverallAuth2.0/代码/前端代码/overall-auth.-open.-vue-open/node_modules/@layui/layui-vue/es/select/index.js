import { b as e, w as l } from "../utils/index.js";
import { computed as a, inject as t, defineComponent as n, useSlots as o, ref as s, onMounted as u, watch as d, onUnmounted as i, provide as r, openBlock as p, createElementBlock as c, normalizeClass as m, unref as v, createVNode as h, withCtx as f, createElementVNode as y, Fragment as b, renderList as g, createBlock as w, mergeProps as C, createCommentVNode as x, renderSlot as k, withKeys as S, withModifiers as V, createSlots as j } from "vue";
import { _ } from "../checkbox/index2.js";
import { _ as z } from "../input/index2.js";
import { _ as T } from "../tagInput/index2.js";
import { _ as I } from "../dropdown/index2.js";
import { _ as N } from "../selectOption/index2.js";
import { _ as B } from "../selectOptionGroup/index2.js";
import "../tag/index2.js";
import "../_chunks/@ctrl/index.js";
import "../tooltip/index2.js";
import "../_chunks/@vueuse/index.js";
const O = { class: "layui-select-content" }, $ = n({ name: "LaySelect", props: { name: null, disabled: { type: Boolean, default: false }, placeholder: null, searchPlaceholder: null, searchMethod: null, modelValue: { default: null }, multiple: { type: Boolean, default: false }, items: null, options: null, size: null, collapseTagsTooltip: { type: Boolean, default: true }, minCollapsedNum: { default: 3 }, allowClear: { type: Boolean, default: false }, showSearch: { type: Boolean, default: false }, contentClass: null, contentStyle: null }, emits: ["update:modelValue", "change", "search"], setup(l2, { emit: n2 }) {
  const $2 = l2, { size: A2 } = function(e2) {
    return { size: a(() => {
      const l3 = t("LayForm", {});
      return e2.size || l3.size || "md";
    }) };
  }($2), M = o(), R = s(), F = s(""), J = s(""), K = s([]), L = s(false), U = s([]), E = s(false);
  var G;
  const H = (l3, a2) => {
    l3 == null ? void 0 : l3.map((l4) => {
      if (e(l4, l4.children))
        H(l4.children, a2);
      else {
        if (l4.type.name == N.name) {
          if (l4.children) {
            const e2 = l4.children.default()[0].children;
            "string" == typeof e2 && (l4.props.label = e2);
          }
          a2.push(l4.props);
        }
        l4.type.name == B.name && l4.children && H(l4.children.default(), a2);
      }
    });
  }, P = () => {
    const e2 = [];
    M.default && H(M.default(), e2), Object.assign(e2, $2.options || $2.items), JSON.stringify(e2) != JSON.stringify(U.value) && (U.value = e2);
  }, W = a(() => $2.options || $2.items), q = (e2) => {
    Array.isArray(X.value) && (X.value = X.value.filter((l3) => l3 != e2));
  }, D = () => {
    E.value = true;
  }, Q = (e2) => {
    E.value = false, Z(e2.target.value);
  };
  u(() => {
    P(), G = setInterval(P, 500), d([X, U], () => {
      var _a, _b;
      if (Y.value)
        try {
          K.value = (_a = X.value) == null ? void 0 : _a.map((e2) => {
            var l3 = U.value.find((l4) => ("" == l4.disabled || 1 == l4.disabled ? l4.closable = false : l4.closable = true, l4.value === e2));
            return null == l3 && (l3 = { label: e2, value: e2, closable: true }), l3;
          });
        } catch (e2) {
          throw new Error("v-model / model-value is not an array type");
        }
      else
        F.value = "", J.value = (_b = U.value.find((e2) => e2.value === X.value)) == null ? void 0 : _b.label;
    }, { immediate: true, deep: true });
  }), i(() => {
    clearInterval(G);
  });
  const X = a({ get: () => $2.multiple && null == $2.modelValue ? [] : $2.modelValue, set(e2) {
    n2("update:modelValue", e2), n2("change", e2);
  } }), Y = a(() => $2.multiple), Z = (e2) => {
    E.value || (n2("search", e2), F.value = e2);
  }, ee = () => {
    Y.value ? X.value = [] : X.value = "";
  }, le = () => {
    F.value = "", L.value = false;
  }, ae = a(() => Array.isArray(X) ? X.value.length > 0 : "" != X.value && null != X.value && null != X.value), te = a(() => ae.value ? "" : $2.placeholder);
  return r("selectRef", R), r("openState", L), r("selectedValue", X), r("searchValue", F), r("multiple", Y), r("searchMethod", $2.searchMethod), (e2, a2) => (p(), c("div", { class: m(["layui-select", { "has-content": v(ae), "has-clear": l2.allowClear, "has-disabled": l2.disabled }]) }, [h(I, { ref_key: "selectRef", ref: R, disabled: l2.disabled, contentClass: l2.contentClass, contentStyle: l2.contentStyle, "update-at-scroll": true, autoFitWidth: true, onHide: le, onShow: a2[5] || (a2[5] = (e3) => L.value = true) }, { content: f(() => [y("dl", O, [U.value || l2.items ? (p(true), c(b, { key: 0 }, g(v(W), (e3, l3) => (p(), w(N, C(e3, { key: l3 }), null, 16))), 128)) : x("", true), k(e2.$slots, "default")])]), default: f(() => [v(Y) ? (p(), w(T, { key: 0, modelValue: K.value, "onUpdate:modelValue": a2[0] || (a2[0] = (e3) => K.value = e3), "input-value": F.value, "onUpdate:input-value": a2[1] || (a2[1] = (e3) => F.value = e3), "allow-clear": l2.allowClear, placeholder: v(te), collapseTagsTooltip: l2.collapseTagsTooltip, minCollapsedNum: l2.minCollapsedNum, disabled: l2.disabled, disabledInput: !l2.showSearch, size: v(A2), class: m({ "layui-unselect": true }), style: { width: "100%" }, onRemove: q, onClear: ee, onInputValueChange: Z, onKeyupCapture: [a2[2] || (a2[2] = S(V(() => {
  }, ["prevent", "stop"]), ["delete"])), a2[3] || (a2[3] = S(V(() => {
  }, ["prevent", "stop"]), ["backspace"]))], onKeydownCapture: a2[4] || (a2[4] = S(V(() => {
  }, ["prevent", "stop"]), ["enter"])) }, j({ suffix: f(() => [h(v(_), { type: "layui-icon-triangle-d", class: m({ triangle: L.value }) }, null, 8, ["class"])]), _: 2 }, [v(M).prepend ? { name: "prepend", fn: f(() => [k(e2.$slots, "prepend")]), key: "0" } : void 0, v(M).append ? { name: "append", fn: f(() => [k(e2.$slots, "append")]), key: "1" } : void 0]), 1032, ["modelValue", "input-value", "allow-clear", "placeholder", "collapseTagsTooltip", "minCollapsedNum", "disabled", "disabledInput", "size"])) : (p(), w(z, { key: 1, size: v(A2), disabled: l2.disabled, readonly: !l2.showSearch, modelValue: J.value, "allow-clear": l2.allowClear, placeholder: v(te), class: m({ "layui-unselect": !l2.showSearch }), onCompositionstart: D, onCompositionend: Q, onInput: Z, onClear: ee }, j({ suffix: f(() => [h(v(_), { type: "layui-icon-triangle-d", class: m({ triangle: L.value }) }, null, 8, ["class"])]), _: 2 }, [v(M).prepend ? { name: "prepend", fn: f(() => [k(e2.$slots, "prepend")]), key: "0" } : void 0, v(M).append ? { name: "append", fn: f(() => [k(e2.$slots, "append")]), key: "1" } : void 0]), 1032, ["size", "disabled", "readonly", "modelValue", "allow-clear", "placeholder", "class"]))]), _: 3 }, 8, ["disabled", "contentClass", "contentStyle"])], 2));
} }), A = l($);
export { A as default };
