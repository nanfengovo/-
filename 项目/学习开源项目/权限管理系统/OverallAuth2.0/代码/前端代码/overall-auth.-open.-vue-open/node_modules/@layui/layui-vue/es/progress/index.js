import { w as e } from "../utils/index.js";
import { defineComponent as r, computed as t, openBlock as l, createElementBlock as c, createElementVNode as s, unref as a, normalizeStyle as i, toDisplayString as o, createCommentVNode as n, normalizeClass as p } from "vue";
const u = { key: 0, class: "lay-progress-circle" }, d = ["viewBox", "width", "height"], h = ["d"], y = ["d"], f = { key: 0, class: "layui-progress-text lay-progress-circle__text" }, g = { key: 0, class: "layui-progress-text" }, k = e(r({ name: "LayProgress", props: { percent: null, theme: null, color: null, size: null, showText: { type: Boolean }, text: null, circle: { type: Boolean, default: false }, circleSize: { default: 150 }, circleWidth: { default: 6 } }, setup(e2) {
  const r2 = e2, k2 = t(() => [r2.color ? "background-color: " + r2.color : "", { width: r2.percent + "%" }]), x = t(() => {
    let e3;
    switch (r2.theme) {
      case "red":
        e3 = "#ff5722";
        break;
      case "orange":
        e3 = "#ffb800";
        break;
      case "green":
        e3 = "#009688";
        break;
      case "cyan":
        e3 = "#2f4056";
        break;
      case "blue":
        e3 = "#1e9fff";
        break;
      case "black":
        e3 = "#393d49";
        break;
      case "gray":
        e3 = "#fafafa";
        break;
      default:
        e3 = "#5FB878";
    }
    return e3 = r2.color ? r2.color : e3, e3;
  });
  t(() => {
    let e3;
    return e3 = "string" == typeof r2.percent ? parseInt(r2.percent) : r2.percent, e3 / 100 * 360;
  });
  const $ = t(() => {
    let e3;
    e3 = "string" == typeof r2.percent ? parseInt(r2.percent) : r2.percent;
    let t2 = r2.circleSize / 2 - r2.circleWidth / 2, l2 = 2 * Math.PI * t2;
    return `${e3 / 100 * l2}px ${l2}px`;
  }), b = t(() => {
    let e3 = r2.circleSize, t2 = r2.circleWidth;
    return `M ${e3 / 2} ${e3 / 2} m 0, -${(e3 - t2) / 2} a ${(e3 - t2) / 2}, ${(e3 - t2) / 2} 0 1, 1 0, ${e3 - t2} a ${(e3 - t2) / 2}, ${(e3 - t2) / 2} 0 1, 1 0, -${e3 - t2}`;
  });
  return (r3, t2) => e2.circle ? (l(), c("div", u, [(l(), c("svg", { viewBox: `0 0 ${e2.circleSize} ${e2.circleSize}`, width: e2.circleSize, height: e2.circleSize }, [s("path", { d: a(b), style: i([{ fill: "none", stroke: "var(--global-neutral-color-3)" }, { strokeWidth: `${e2.circleWidth}px` }]) }, null, 12, h), s("path", { d: a(b), style: i([{ fill: "none", "stroke-linecap": "round" }, { strokeDasharray: a($), stroke: a(x), strokeWidth: `${e2.circleWidth}px` }]) }, null, 12, y)], 8, d)), e2.showText ? (l(), c("div", f, o(e2.text ? e2.text : e2.percent + "%"), 1)) : n("", true)])) : (l(), c("div", { key: 1, class: p(["layui-progress", "layui-progress-" + e2.size]) }, [s("div", { class: p(["layui-progress-bar", "layui-bg-" + e2.theme]), style: i(a(k2)) }, [e2.showText ? (l(), c("span", g, o(e2.text ? e2.text : e2.percent + "%"), 1)) : n("", true)], 6)], 2));
} }));
export { k as default };
