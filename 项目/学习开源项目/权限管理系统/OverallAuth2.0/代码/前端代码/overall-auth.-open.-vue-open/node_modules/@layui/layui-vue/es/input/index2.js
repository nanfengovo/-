import { w as e } from "../utils/index.js";
import { computed as l, inject as a, defineComponent as u, useSlots as n, ref as o, watch as i, openBlock as t, createElementBlock as s, normalizeClass as p, unref as d, renderSlot as r, createCommentVNode as c, createElementVNode as m, createBlock as y, createVNode as f, withModifiers as x, nextTick as v } from "vue";
import { _ as b } from "../checkbox/index2.js";
const k = ["size"], g = { key: 0, class: "layui-input-prepend" }, h = { key: 0, class: "layui-input-prefix" }, V = ["type", "name", "disabled", "placeholder", "autofocus", "autocomplete", "maxlength", "max", "min", "readonly", "value"], w = { key: 2, class: "layui-input-clear" }, I = { key: 3, class: "layui-input-suffix" }, C = { key: 1, class: "layui-input-append" }, z = u({ name: "LayInput", props: { name: null, type: null, prefixIcon: null, suffixIcon: null, modelValue: { default: "" }, allowClear: { type: Boolean, default: false }, autocomplete: null, placeholder: null, autofocus: { type: Boolean, default: false }, disabled: { type: Boolean, default: false }, readonly: { type: Boolean, default: false }, password: { type: Boolean, default: false }, size: null, maxlength: null, max: null, min: null }, emits: ["blur", "input", "update:modelValue", "change", "focus", "clear"], setup(e2, { expose: u2, emit: z2 }) {
  const B2 = e2, { size: S } = function(e3) {
    return { size: l(() => {
      const l2 = a("LayForm", {});
      return e3.size || l2.size || "md";
    }) };
  }(B2), $ = n(), _ = o(B2.type), j = o(), F = o(String(null == B2.modelValue ? "" : B2.modelValue)), L = l(() => {
    var _a;
    return ((_a = B2.modelValue) == null ? void 0 : _a.length) > 0;
  }), N = l(() => "password" == _.value), R = o(false);
  i(() => B2.type, () => {
    _.value = B2.type;
  }), i(() => B2.modelValue, () => {
    F.value = String(null == B2.modelValue ? "" : B2.modelValue);
  });
  const q = function(e3) {
    const l2 = e3.target.value;
    R.value || (z2("update:modelValue", l2), v(() => {
      z2("input", l2);
    }));
  }, A = () => {
    z2("update:modelValue", ""), z2("clear");
  }, D = (e3) => {
    z2("focus", e3);
  }, E = (e3) => {
    const l2 = e3.target.value;
    z2("change", l2);
  }, G = (e3) => {
    "number" === B2.type && H(e3), z2("blur", e3);
  }, H = (e3) => {
    let l2 = e3.target.value;
    "" === l2 ? l2 = B2.min ? String(B2.min) : "0" : (B2.max && B2.max < Number(l2) && (l2 = B2.max.toString()), B2.min && B2.min > Number(l2) && (l2 = B2.min.toString())), z2("update:modelValue", l2);
  }, J = () => {
    R.value = true;
  }, K = (e3) => {
    R.value = false, q(e3);
  }, M = l(() => ({ "layui-input-has-prefix": $.prefix || B2.prefixIcon })), O = l(() => ({ "layui-input-disabled": B2.disabled })), P = () => {
    N.value ? _.value = "text" : _.value = "password";
  };
  return u2({ focus: () => {
    v(() => {
      var _a;
      (_a = j.value) == null ? void 0 : _a.focus();
    });
  }, blur: () => {
    v(() => {
      var _a;
      (_a = j.value) == null ? void 0 : _a.blur();
    });
  } }), (l2, a2) => (t(), s("div", { class: p(["layui-input", d(M)]), size: d(S) }, [d($).prepend ? (t(), s("div", g, [r(l2.$slots, "prepend", { disabled: e2.disabled })])) : c("", true), m("div", { class: p(["layui-input-wrapper", d(O)]) }, [d($).prefix || B2.prefixIcon ? (t(), s("span", h, [d($).prefix ? r(l2.$slots, "prefix", { key: 0 }) : (t(), y(d(b), { key: 1, type: B2.prefixIcon, class: "layui-input-prefix-icon" }, null, 8, ["type"]))])) : c("", true), m("input", { type: _.value, name: e2.name, disabled: e2.disabled, placeholder: e2.placeholder, autofocus: e2.autofocus, autocomplete: e2.autocomplete, maxlength: e2.maxlength, max: e2.max, min: e2.min, readonly: e2.readonly, value: F.value, onBlur: G, onInput: q, onFocus: D, onChange: E, onCompositionstart: J, onCompositionend: K, ref_key: "inputRef", ref: j }, null, 40, V), e2.password && d(L) ? (t(), s("span", { key: 1, class: "layui-input-password", onClick: P }, [d(N) ? (t(), y(d(b), { key: 0, type: "layui-icon-show" })) : (t(), y(d(b), { key: 1, type: "layui-icon-hide" }))])) : c("", true), e2.allowClear && d(L) && !e2.disabled ? (t(), s("span", w, [f(d(b), { type: "layui-icon-close-fill", onClick: x(A, ["stop"]) }, null, 8, ["onClick"])])) : c("", true), d($).suffix || B2.suffixIcon ? (t(), s("span", I, [d($).suffix ? r(l2.$slots, "suffix", { key: 0 }) : (t(), y(d(b), { key: 1, type: B2.suffixIcon, class: "layui-input-suffix-icon" }, null, 8, ["type"]))])) : c("", true)], 2), d($).append ? (t(), s("div", C, [r(l2.$slots, "append", { disabled: e2.disabled })])) : c("", true)], 10, k));
} }), B = e(z);
export { z as _, B as c };
