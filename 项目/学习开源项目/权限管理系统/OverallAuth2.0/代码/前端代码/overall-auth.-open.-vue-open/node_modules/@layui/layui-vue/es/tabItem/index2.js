import { w as l } from "../utils/index.js";
import { defineComponent as i, getCurrentInstance as t, useSlots as e, inject as o, reactive as a, watch as s, onBeforeUnmount as d, openBlock as c, createElementBlock as n, normalizeClass as u, unref as m, renderSlot as r } from "vue";
const b = Symbol("layuiTab"), p = i({ name: "LayTabItem", props: { id: null, title: null, icon: null, closable: { type: [Boolean, String], default: true } }, setup(l2) {
  var _a;
  const i2 = l2, p2 = t(), y2 = e(), f = o("active"), v = o(b, {}), I = a({ id: i2.id, title: i2.title, icon: i2.icon, closable: i2.closable, slots: y2 });
  return (p2 == null ? void 0 : p2.uid) && ((_a = v.addItem) == null ? void 0 : _a.call(v, i2.id, I)), s(() => i2, () => {
    var _a2;
    (_a2 = v.addItem) == null ? void 0 : _a2.call(v, i2.id, a({ id: i2.id, title: i2.title, icon: i2.icon, closable: i2.closable, slots: y2 }));
  }, { deep: true }), d(() => {
    var _a2;
    (p2 == null ? void 0 : p2.uid) && ((_a2 = v.removeItem) == null ? void 0 : _a2.call(v, i2.id));
  }), (i3, t2) => (c(), n("div", { class: u(["layui-tab-item", [m(f) === l2.id ? "layui-show" : ""]]) }, [r(i3.$slots, "default")], 2));
} }), y = l(p);
export { b as T, p as _, y as c };
