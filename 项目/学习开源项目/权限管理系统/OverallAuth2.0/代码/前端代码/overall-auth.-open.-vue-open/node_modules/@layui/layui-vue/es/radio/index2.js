import { w as e } from "../utils/index.js";
import { computed as a, inject as l, defineComponent as u, openBlock as i, createElementBlock as o, unref as n, createElementVNode as s, normalizeClass as d, withModifiers as r, renderSlot as t, createTextVNode as m, toDisplayString as v } from "vue";
const y = ["size"], p = ["value", "name"], c = ["onClick"], b = { key: 0, class: "layui-anim layui-icon layui-anim-scaleSpring" }, f = { key: 1, class: "layui-icon layui-form-radioed" }, z = u({ name: "LayRadio", props: { name: null, size: null, disabled: { type: Boolean }, modelValue: { type: [String, Boolean, Number] }, value: { type: [String, Boolean, Number] }, label: null }, emits: ["update:modelValue", "change"], setup(e2, { emit: u2 }) {
  const z2 = e2, { size: g2 } = function(e3) {
    return { size: a(() => {
      const a2 = l("LayForm", {});
      return e3.size || a2.size || "md";
    }) };
  }(z2), V = l("radioGroup", {}), k = a(() => null != V && "LayRadioGroup" === (V == null ? void 0 : V.name)), N = a(() => V.naiveName ? V.naiveName : z2.name), h = a({ get: () => k.value ? V.modelValue.value === z2.value : z2.modelValue === z2.value, set(e3) {
    k.value ? V.modelValue.value = z2.value : e3 && (u2("change", z2.value), u2("update:modelValue", z2.value));
  } }), B = function() {
    L.value || (h.value = !h.value);
  }, L = a(() => !!z2.disabled || !(!V.hasOwnProperty("disabled") || !V.disabled.value));
  return (a2, l2) => (i(), o("span", { class: "layui-radio", size: n(g2) }, [s("input", { type: "radio", value: e2.value, name: n(N) }, null, 8, p), s("div", { class: d(["layui-unselect layui-form-radio", { "layui-form-radioed": n(h), "layui-radio-disabled layui-disabled": n(L) }]), onClick: r(B, ["stop"]) }, [n(h) ? (i(), o("i", b, "\uE643")) : (i(), o("i", f, "\uE63F")), s("span", null, [t(a2.$slots, "default", {}, () => [m(v(e2.label), 1)])])], 10, c)], 8, y));
} }), g = e(z);
export { z as _, g as c };
