import { w as e } from "../utils/index.js";
import { computed as l, inject as a, defineComponent as t, onMounted as n, watch as d, ref as i, useSlots as o, openBlock as c, createElementBlock as s, unref as u, normalizeClass as r, createVNode as h, withCtx as p, createElementVNode as f, Fragment as v, renderList as m, createBlock as y, renderSlot as g, createTextVNode as b, toDisplayString as x, createCommentVNode as k } from "vue";
import { _ as V } from "../input/index2.js";
import { _ as S } from "../scroll/index2.js";
import { _ as C } from "../dropdown/index2.js";
import "../checkbox/index2.js";
import "../_chunks/@vueuse/index.js";
const F = ["size"], w = { key: 1, class: "slot-area" }, z = { class: "layui-cascader-panel" }, I = ["onClick"], j = { key: 2, class: "layui-icon layui-icon-right" }, L = t({ name: "LayCascader", props: { options: { default: null }, modelValue: { default: "" }, decollator: { default: "/" }, placeholder: { default: "" }, onlyLastLevel: { type: Boolean, default: false }, disabled: { type: Boolean, default: false }, replaceFields: { default: () => ({ label: "label", value: "value", children: "children" }) }, allowClear: { type: Boolean, default: false }, size: null, trigger: { default: "click" }, contentClass: null, contentStyle: null, changeOnSelect: { type: Boolean, default: false } }, emits: ["update:modelValue", "change", "clear"], setup(e2, { emit: t2 }) {
  const L2 = e2, { size: O2 } = function(e3) {
    return { size: l(() => {
      const l2 = a("LayForm", {});
      return e3.size || l2.size || "md";
    }) };
  }(L2);
  n(() => {
    J(), _.value = true;
  }), d(() => L2.options, () => {
    J();
  }), d(() => L2.modelValue, () => {
    null === L2.modelValue || "" === L2.modelValue ? R() : N();
  });
  const _ = i(false), B = i([]), J = () => {
    let e3 = function(e4) {
      let l2 = 0;
      function a2(e5, t3) {
        e5.forEach((e6) => {
          t3 > l2 && (l2 = t3), e6[L2.replaceFields.children] && e6[L2.replaceFields.children].length > 0 && a2(e6[L2.replaceFields.children], t3 + 1);
        });
      }
      return a2(e4, 1), l2;
    }(L2.options);
    for (let l2 = 0; l2 < e3; l2++)
      0 == l2 ? B.value[0] = { selectIndex: null, data: $(L2.options, 1) } : B.value[l2] = { selectIndex: null, data: [] };
    N();
  };
  function N() {
    if (L2.modelValue)
      try {
        let e3 = L2.modelValue.split(L2.decollator);
        for (let l2 = 0; l2 < e3.length; l2++) {
          const a2 = e3[l2];
          let t3 = B.value[l2].data.findIndex((e4) => e4.value === a2);
          if (-1 == t3)
            break;
          D(B.value[l2].data[t3], t3, l2);
        }
      } catch (e3) {
        console.error(e3);
      }
  }
  function $(e3, l2) {
    var _a;
    let a2 = [];
    for (let t3 = 0; t3 < e3.length; t3++) {
      const n2 = e3[t3];
      1 === l2 && a2.push({ value: n2[L2.replaceFields.value], label: n2[L2.replaceFields.label], slot: n2.slot || false, children: (_a = n2[L2.replaceFields.children]) != null ? _a : false, orginData: n2 }), 1 !== l2 && n2[L2.replaceFields.children] && n2[L2.replaceFields.children].length > 0 && $(n2[L2.replaceFields.children], l2 - 1);
    }
    return a2;
  }
  i([]);
  const D = (e3, l2, a2, n2 = null) => {
    B.value[a2].selectIndex = l2, e3.children && e3.children.length > 0 && (B.value[a2 + 1].selectIndex = null, B.value[a2 + 1].data = $(e3.children, 1));
    for (let e4 = a2 + 2; e4 < B.value.length; e4++)
      B.value[e4].selectIndex = null, B.value[e4].data = [];
    if (!e3.children || 0 === e3.children.length || L2.changeOnSelect && !L2.onlyLastLevel) {
      let l3 = function(e4, a4, t3) {
        const n3 = e4[t3].data[e4[t3].selectIndex];
        n3 && a4.push(n3), n3 && n3.children && n3.children.length > 0 && l3(e4, a4, t3 + 1);
      }, a3 = [];
      l3(B.value, a3, 0);
      let d2 = a3.map((e4) => e4.label).join(` ${L2.decollator} `);
      if (L2.onlyLastLevel) {
        let e4 = a3.map((e5) => e5.label);
        A.value = e4[e4.length - 1];
      } else
        A.value = d2;
      let i2 = a3.map((e4) => e4.value).join(L2.decollator);
      if ("click" === n2 && t2("update:modelValue", i2), _.value) {
        let l4 = { display: A.value, value: i2, label: d2, currentClick: JSON.parse(JSON.stringify(e3.orginData)) };
        t2("change", l4);
      }
      if (H.value) {
        if (L2.changeOnSelect && e3.children && e3.children.length > 0)
          return;
        H.value.hide();
      }
    }
  }, A = i(""), E = o(), H = i(), M = l(() => "" != L2.modelValue && null != L2.modelValue), R = () => {
    A.value = "";
    let e3 = JSON.parse(JSON.stringify(B.value));
    for (let l2 = 0; l2 < e3.length; l2++)
      e3[l2].selectIndex = null, 0 !== l2 && (e3[l2].data = []);
    B.value = e3, t2("update:modelValue", null);
  }, U = i(false);
  return (l2, a2) => (c(), s("div", { size: u(O2), class: r(["layui-cascader", { "layui-cascader-opend": U.value, "layui-cascader-disabled": e2.disabled, "has-content": u(M), "has-clear": e2.allowClear }]) }, [h(C, { ref_key: "dropdownRef", ref: H, trigger: e2.trigger, autoFitMinWidth: false, updateAtScroll: true, disabled: e2.disabled, contentClass: e2.contentClass, contentStyle: e2.contentStyle, onShow: a2[1] || (a2[1] = (e3) => U.value = true), onHide: a2[2] || (a2[2] = (e3) => U.value = false) }, { content: p(() => [f("div", z, [(c(true), s(v, null, m(B.value, (e3, a3) => (c(), s(v, null, [e3.data.length ? (c(), y(S, { height: "180px", class: "layui-cascader-menu", key: "cascader-menu" + a3 }, { default: p(() => [(c(true), s(v, null, m(e3.data, (t3, n2) => (c(), s("div", { class: r(["layui-cascader-menu-item", [{ "layui-cascader-selected": e3.selectIndex === n2 }]]), key: a3 + n2, onClick: (e4) => D(t3, n2, a3, "click") }, [t3.slot && u(E)[t3.slot] ? g(l2.$slots, t3.slot, { key: 0 }) : (c(), s(v, { key: 1 }, [b(x(t3.label), 1)], 64)), t3.children && t3.children.length ? (c(), s("i", j)) : k("", true)], 10, I))), 128))]), _: 2 }, 1024)) : k("", true)], 64))), 256))])]), default: p(() => [u(E).default ? (c(), s("div", w, [g(l2.$slots, "default")])) : (c(), y(V, { key: 0, modelValue: A.value, "onUpdate:modelValue": a2[0] || (a2[0] = (e3) => A.value = e3), "suffix-icon": "layui-icon-triangle-d", placeholder: e2.placeholder, "allow-clear": e2.allowClear, disabled: e2.disabled, readonly: true, size: u(O2), onClear: R }, null, 8, ["modelValue", "placeholder", "allow-clear", "disabled", "size"]))]), _: 3 }, 8, ["trigger", "disabled", "contentClass", "contentStyle"])], 10, F));
} }), O = e(L);
export { O as default };
