import { w as e } from "../utils/index.js";
import { defineComponent as t, useSlots as o, computed as r, openBlock as n, createElementBlock as i, normalizeClass as l, unref as d, normalizeStyle as a, renderSlot as s, createCommentVNode as f } from "vue";
const u = e(t({ name: "LayLine", props: { direction: { default: "horizontal" }, contentPosition: { default: "center" }, borderWidth: { default: "1px" }, borderStyle: { default: "solid" }, offset: { default: "25px" }, theme: null, margin: { default: "8px" } }, setup(e2) {
  var _a;
  const t2 = e2, u2 = o(), b = ["red", "orange", "green", "cyan", "blue", "black", "gray"].includes((_a = t2.theme) != null ? _a : ""), c = r(() => [`layui-line-${t2.direction}`, { [`layui-border-${t2.theme}`]: b, "layui-line-with-text": Boolean(u2.default) }]), m = r(() => "horizontal" === t2.direction ? { "border-bottom-color": b ? void 0 : t2.theme, "border-bottom-width": t2.borderWidth, "border-bottom-style": t2.borderStyle, margin: `${t2.margin} 0`, "border-right": "none", "border-left": "none", "border-top": "none" } : { "border-left-color": b ? void 0 : t2.theme, "border-left-width": t2.borderWidth, "border-left-style": t2.borderStyle, margin: `0 ${t2.margin}`, "border-bottom": "none", "border-right": "none", "border-top": "none" }), h = r(() => ({ "--layui-line-text-offset": "center" != t2.contentPosition ? t2.offset : "50%", transform: y() }));
  function y() {
    if (t2.offset.includes("%"))
      return "right" === t2.contentPosition ? "translate(50%, -50%)" : "translate(-50%, -50%)";
  }
  return (t3, o2) => (n(), i("div", { class: l(d(c)), style: a(d(m)) }, [t3.$slots.default && "horizontal" === e2.direction ? (n(), i("span", { key: 0, class: l([`layui-line-text layui-line-text-${e2.contentPosition}`]), style: a(d(h)) }, [s(t3.$slots, "default")], 6)) : f("", true)], 6));
} }));
export { u as default };
