import { w as l } from "../utils/index.js";
import { computed as e, inject as i, defineComponent as n, openBlock as a, createElementBlock as o, normalizeClass as t, unref as u, normalizeStyle as s, createCommentVNode as d, createElementVNode as r, renderSlot as y } from "vue";
const c = ["type"], f = n({ name: "LayButton", props: { type: null, size: null, prefixIcon: null, suffixIcon: null, loadingIcon: { default: "layui-icon-loading-one" }, borderStyle: { default: "soild" }, border: null, fluid: { type: Boolean, default: false }, radius: { type: Boolean, default: false }, loading: { type: Boolean, default: false }, disabled: { type: Boolean }, nativeType: { default: "button" } }, emits: { click: (l2) => l2 instanceof MouseEvent }, setup(l2, { emit: n2 }) {
  const f2 = l2, { size: p2 } = function(l3) {
    return { size: e(() => {
      const e2 = i("LayForm", {});
      return l3.size || e2.size || "md";
    }) };
  }(f2), b = (l3) => {
    f2.disabled || f2.loading || n2("click", l3);
  }, m = e(() => ({ border: `1px ${f2.borderStyle}` })), x = e(() => [{ "layui-btn-fluid": f2.fluid, "layui-btn-radius": f2.radius, "layui-btn-disabled": f2.disabled }, f2.type ? `layui-btn-${f2.type}` : "", p2.value ? `layui-btn-${p2.value}` : "", f2.border ? `layui-border-${f2.border}` : ""]);
  return (e2, i2) => (a(), o("button", { class: t(["layui-btn", u(x)]), style: s(u(m)), type: l2.nativeType, onClick: b }, [l2.prefixIcon ? (a(), o("i", { key: 0, class: t(`layui-icon ${l2.prefixIcon}`) }, null, 2)) : d("", true), l2.loading ? (a(), o("i", { key: 1, class: t([l2.loadingIcon, "layui-icon layui-anim layui-anim-rotate layui-anim-loop"]) }, null, 2)) : d("", true), r("span", null, [y(e2.$slots, "default")]), l2.suffixIcon ? (a(), o("i", { key: 2, class: t(`layui-icon ${l2.suffixIcon}`) }, null, 2)) : d("", true)], 14, c));
} }), p = l(f);
export { f as _, p as c };
