function e(e2) {
  return e2.composedPath()[0];
}
const t = { mousemoveoutside: /* @__PURE__ */ new WeakMap(), clickoutside: /* @__PURE__ */ new WeakMap() };
function n(n2, o2, i2) {
  const r2 = t[n2];
  let u2 = r2.get(o2);
  void 0 === u2 && r2.set(o2, u2 = /* @__PURE__ */ new WeakMap());
  let c = u2.get(i2);
  return void 0 === c && u2.set(i2, c = function(t2, n3, o3) {
    if ("mousemoveoutside" === t2) {
      const t3 = (t4) => {
        n3.contains(e(t4)) || o3(t4);
      };
      return { mousemove: t3, touchstart: t3 };
    }
    if ("clickoutside" === t2) {
      let t3 = false;
      const i3 = (o4) => {
        t3 = !n3.contains(e(o4));
      }, r3 = (i4) => {
        t3 && (n3.contains(e(i4)) || o3(i4));
      };
      return { mousedown: i3, mouseup: r3, touchstart: i3, touchend: r3 };
    }
    return console.error(`[evtd/create-trap-handler]: name \`${t2}\` is invalid. This could be a bug of evtd.`), {};
  }(n2, o2, i2)), c;
}
function o(e2, t2, o2, i2) {
  if ("mousemoveoutside" === e2 || "clickoutside" === e2) {
    const u2 = n(e2, t2, o2);
    return Object.keys(u2).forEach((e3) => {
      r(e3, document, u2[e3], i2);
    }), true;
  }
  return false;
}
function i(e2, t2, o2, i2) {
  if ("mousemoveoutside" === e2 || "clickoutside" === e2) {
    const r2 = n(e2, t2, o2);
    return Object.keys(r2).forEach((e3) => {
      u(e3, document, r2[e3], i2);
    }), true;
  }
  return false;
}
const { on: r, off: u } = function() {
  if ("undefined" == typeof window)
    return { on: () => {
    }, off: () => {
    } };
  const t2 = /* @__PURE__ */ new WeakMap(), n2 = /* @__PURE__ */ new WeakMap();
  function r2() {
    t2.set(this, true);
  }
  function u2() {
    t2.set(this, true), n2.set(this, true);
  }
  function c(e2, t3, n3) {
    const o2 = e2[t3];
    return e2[t3] = function() {
      return n3.apply(e2, arguments), o2.apply(e2, arguments);
    }, e2;
  }
  function s(e2, t3) {
    e2[t3] = Event.prototype[t3];
  }
  const a = /* @__PURE__ */ new WeakMap(), f = Object.getOwnPropertyDescriptor(Event.prototype, "currentTarget");
  function d() {
    var e2;
    return null !== (e2 = a.get(this)) && void 0 !== e2 ? e2 : null;
  }
  function p(e2, t3) {
    void 0 !== f && Object.defineProperty(e2, "currentTarget", { configurable: true, enumerable: true, get: null != t3 ? t3 : f.get });
  }
  const l = { bubble: {}, capture: {} }, v = {}, b = function() {
    const o2 = function(o3) {
      const { type: i2, eventPhase: f2, bubbles: v2 } = o3, b2 = e(o3);
      if (2 === f2)
        return;
      const w2 = 1 === f2 ? "capture" : "bubble";
      let h2 = b2;
      const m2 = [];
      for (; null === h2 && (h2 = window), m2.push(h2), h2 !== window; )
        h2 = h2.parentNode || null;
      const g2 = l.capture[i2], y = l.bubble[i2];
      if (c(o3, "stopPropagation", r2), c(o3, "stopImmediatePropagation", u2), p(o3, d), "capture" === w2) {
        if (void 0 === g2)
          return;
        for (let e2 = m2.length - 1; e2 >= 0 && !t2.has(o3); --e2) {
          const t3 = m2[e2], i3 = g2.get(t3);
          if (void 0 !== i3) {
            a.set(o3, t3);
            for (const e3 of i3) {
              if (n2.has(o3))
                break;
              e3(o3);
            }
          }
          if (0 === e2 && !v2 && void 0 !== y) {
            const e3 = y.get(t3);
            if (void 0 !== e3)
              for (const t4 of e3) {
                if (n2.has(o3))
                  break;
                t4(o3);
              }
          }
        }
      } else if ("bubble" === w2) {
        if (void 0 === y)
          return;
        for (let e2 = 0; e2 < m2.length && !t2.has(o3); ++e2) {
          const t3 = m2[e2], i3 = y.get(t3);
          if (void 0 !== i3) {
            a.set(o3, t3);
            for (const e3 of i3) {
              if (n2.has(o3))
                break;
              e3(o3);
            }
          }
        }
      }
      s(o3, "stopPropagation"), s(o3, "stopImmediatePropagation"), p(o3);
    };
    return o2.displayName = "evtdUnifiedHandler", o2;
  }(), w = function() {
    const e2 = function(e3) {
      const { type: t3, eventPhase: n3 } = e3;
      if (2 !== n3)
        return;
      const o2 = v[t3];
      void 0 !== o2 && o2.forEach((t4) => t4(e3));
    };
    return e2.displayName = "evtdUnifiedWindowEventHandler", e2;
  }();
  function h(e2, t3) {
    const n3 = l[e2];
    return void 0 === n3[t3] && (n3[t3] = /* @__PURE__ */ new Map(), window.addEventListener(t3, b, "capture" === e2)), n3[t3];
  }
  function m(e2, t3) {
    let n3 = e2.get(t3);
    return void 0 === n3 && e2.set(t3, n3 = /* @__PURE__ */ new Set()), n3;
  }
  function g(e2, t3, n3, o2) {
    if (i(e2, t3, n3, o2))
      return;
    const r3 = true === o2 || "object" == typeof o2 && true === o2.capture, u3 = r3 ? "capture" : "bubble", c2 = h(u3, e2), s2 = m(c2, t3);
    if (t3 === window) {
      if (!function(e3, t4, n4, o3) {
        const i2 = l[t4][n4];
        if (void 0 !== i2) {
          const t5 = i2.get(e3);
          if (void 0 !== t5 && t5.has(o3))
            return true;
        }
        return false;
      }(t3, r3 ? "bubble" : "capture", e2, n3) && function(e3, t4) {
        const n4 = v[e3];
        return !(void 0 === n4 || !n4.has(t4));
      }(e2, n3)) {
        const t4 = v[e2];
        t4.delete(n3), 0 === t4.size && (window.removeEventListener(e2, w), v[e2] = void 0);
      }
    }
    s2.has(n3) && s2.delete(n3), 0 === s2.size && c2.delete(t3), 0 === c2.size && (window.removeEventListener(e2, b, "capture" === u3), l[u3][e2] = void 0);
  }
  return { on: function(e2, t3, n3, i2) {
    let r3;
    if (r3 = "object" == typeof i2 && true === i2.once ? (o2) => {
      g(e2, t3, r3, i2), n3(o2);
    } : n3, o(e2, t3, r3, i2))
      return;
    const u3 = m(h(true === i2 || "object" == typeof i2 && true === i2.capture ? "capture" : "bubble", e2), t3);
    if (u3.has(r3) || u3.add(r3), t3 === window) {
      const t4 = function(e3) {
        return void 0 === v[e3] && (v[e3] = /* @__PURE__ */ new Set(), window.addEventListener(e3, w)), v[e3];
      }(e2);
      t4.has(r3) || t4.add(r3);
    }
  }, off: g };
}();
export { u as a, r as o };
