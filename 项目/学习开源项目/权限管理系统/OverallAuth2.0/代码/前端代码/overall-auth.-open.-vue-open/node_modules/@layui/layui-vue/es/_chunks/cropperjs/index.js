/*!
 * Cropper.js v1.5.13
 * https://fengyuanchen.github.io/cropperjs
 *
 * Copyright 2015-present Chen Fengyuan
 * Released under the MIT license
 *
 * Date: 2022-11-20T05:30:46.114Z
 */
function t(t2, e2) {
  var i2 = Object.keys(t2);
  if (Object.getOwnPropertySymbols) {
    var a2 = Object.getOwnPropertySymbols(t2);
    e2 && (a2 = a2.filter(function(e3) {
      return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
    })), i2.push.apply(i2, a2);
  }
  return i2;
}
function e(e2) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var a2 = null != arguments[i2] ? arguments[i2] : {};
    i2 % 2 ? t(Object(a2), true).forEach(function(t2) {
      n(e2, t2, a2[t2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(a2)) : t(Object(a2)).forEach(function(t2) {
      Object.defineProperty(e2, t2, Object.getOwnPropertyDescriptor(a2, t2));
    });
  }
  return e2;
}
function i(t2) {
  return i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t3) {
    return typeof t3;
  } : function(t3) {
    return t3 && "function" == typeof Symbol && t3.constructor === Symbol && t3 !== Symbol.prototype ? "symbol" : typeof t3;
  }, i(t2);
}
function a(t2, e2) {
  for (var i2 = 0; i2 < e2.length; i2++) {
    var a2 = e2[i2];
    a2.enumerable = a2.enumerable || false, a2.configurable = true, "value" in a2 && (a2.writable = true), Object.defineProperty(t2, a2.key, a2);
  }
}
function n(t2, e2, i2) {
  return e2 in t2 ? Object.defineProperty(t2, e2, { value: i2, enumerable: true, configurable: true, writable: true }) : t2[e2] = i2, t2;
}
function o(t2) {
  return function(t3) {
    if (Array.isArray(t3))
      return r(t3);
  }(t2) || function(t3) {
    if ("undefined" != typeof Symbol && null != t3[Symbol.iterator] || null != t3["@@iterator"])
      return Array.from(t3);
  }(t2) || function(t3, e2) {
    if (!t3)
      return;
    if ("string" == typeof t3)
      return r(t3, e2);
    var i2 = Object.prototype.toString.call(t3).slice(8, -1);
    "Object" === i2 && t3.constructor && (i2 = t3.constructor.name);
    if ("Map" === i2 || "Set" === i2)
      return Array.from(t3);
    if ("Arguments" === i2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i2))
      return r(t3, e2);
  }(t2) || function() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }();
}
function r(t2, e2) {
  (null == e2 || e2 > t2.length) && (e2 = t2.length);
  for (var i2 = 0, a2 = new Array(e2); i2 < e2; i2++)
    a2[i2] = t2[i2];
  return a2;
}
var h = "undefined" != typeof window && void 0 !== window.document, s = h ? window : {}, c = !(!h || !s.document.documentElement) && "ontouchstart" in s.document.documentElement, l = !!h && "PointerEvent" in s, d = "cropper", p = "all", m = "crop", u = "move", g = "zoom", f = "e", v = "w", w = "s", b = "n", y = "ne", x = "nw", M = "se", C = "sw", D = "".concat(d, "-crop"), B = "".concat(d, "-disabled"), k = "".concat(d, "-hidden"), O = "".concat(d, "-hide"), T = "".concat(d, "-invisible"), E = "".concat(d, "-modal"), W = "".concat(d, "-move"), H = "".concat(d, "Action"), N = "".concat(d, "Preview"), L = "crop", z = "move", Y = "none", X = "crop", R = "cropend", S = "cropmove", A = "cropstart", j = "dblclick", P = l ? "pointerdown" : c ? "touchstart" : "mousedown", I = l ? "pointermove" : c ? "touchmove" : "mousemove", U = l ? "pointerup pointercancel" : c ? "touchend touchcancel" : "mouseup", q = "ready", $ = "resize", Q = "wheel", K = "zoom", Z = "image/jpeg", G = /^e|w|s|n|se|sw|ne|nw|all|crop|move|zoom$/, V = /^data:/, F = /^data:image\/jpeg;base64,/, J = /^img|canvas$/i, _ = { viewMode: 0, dragMode: L, initialAspectRatio: NaN, aspectRatio: NaN, data: null, preview: "", responsive: true, restore: true, checkCrossOrigin: true, checkOrientation: true, modal: true, guides: true, center: true, highlight: true, background: true, autoCrop: true, autoCropArea: 0.8, movable: true, rotatable: true, scalable: true, zoomable: true, zoomOnTouch: true, zoomOnWheel: true, wheelZoomRatio: 0.1, cropBoxMovable: true, cropBoxResizable: true, toggleDragModeOnDblclick: true, minCanvasWidth: 0, minCanvasHeight: 0, minCropBoxWidth: 0, minCropBoxHeight: 0, minContainerWidth: 200, minContainerHeight: 100, ready: null, cropstart: null, cropmove: null, cropend: null, crop: null, zoom: null }, tt = Number.isNaN || s.isNaN;
function et(t2) {
  return "number" == typeof t2 && !tt(t2);
}
var it = function(t2) {
  return t2 > 0 && t2 < 1 / 0;
};
function at(t2) {
  return void 0 === t2;
}
function nt(t2) {
  return "object" === i(t2) && null !== t2;
}
var ot = Object.prototype.hasOwnProperty;
function rt(t2) {
  if (!nt(t2))
    return false;
  try {
    var e2 = t2.constructor, i2 = e2.prototype;
    return e2 && i2 && ot.call(i2, "isPrototypeOf");
  } catch (t3) {
    return false;
  }
}
function ht(t2) {
  return "function" == typeof t2;
}
var st = Array.prototype.slice;
function ct(t2) {
  return Array.from ? Array.from(t2) : st.call(t2);
}
function lt(t2, e2) {
  return t2 && ht(e2) && (Array.isArray(t2) || et(t2.length) ? ct(t2).forEach(function(i2, a2) {
    e2.call(t2, i2, a2, t2);
  }) : nt(t2) && Object.keys(t2).forEach(function(i2) {
    e2.call(t2, t2[i2], i2, t2);
  })), t2;
}
var dt = Object.assign || function(t2) {
  for (var e2 = arguments.length, i2 = new Array(e2 > 1 ? e2 - 1 : 0), a2 = 1; a2 < e2; a2++)
    i2[a2 - 1] = arguments[a2];
  return nt(t2) && i2.length > 0 && i2.forEach(function(e3) {
    nt(e3) && Object.keys(e3).forEach(function(i3) {
      t2[i3] = e3[i3];
    });
  }), t2;
}, pt = /\.\d*(?:0|9){12}\d*$/;
function mt(t2) {
  var e2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1e11;
  return pt.test(t2) ? Math.round(t2 * e2) / e2 : t2;
}
var ut = /^width|height|left|top|marginLeft|marginTop$/;
function gt(t2, e2) {
  var i2 = t2.style;
  lt(e2, function(t3, e3) {
    ut.test(e3) && et(t3) && (t3 = "".concat(t3, "px")), i2[e3] = t3;
  });
}
function ft(t2, e2) {
  if (e2)
    if (et(t2.length))
      lt(t2, function(t3) {
        ft(t3, e2);
      });
    else if (t2.classList)
      t2.classList.add(e2);
    else {
      var i2 = t2.className.trim();
      i2 ? i2.indexOf(e2) < 0 && (t2.className = "".concat(i2, " ").concat(e2)) : t2.className = e2;
    }
}
function vt(t2, e2) {
  e2 && (et(t2.length) ? lt(t2, function(t3) {
    vt(t3, e2);
  }) : t2.classList ? t2.classList.remove(e2) : t2.className.indexOf(e2) >= 0 && (t2.className = t2.className.replace(e2, "")));
}
function wt(t2, e2, i2) {
  e2 && (et(t2.length) ? lt(t2, function(t3) {
    wt(t3, e2, i2);
  }) : i2 ? ft(t2, e2) : vt(t2, e2));
}
var bt = /([a-z\d])([A-Z])/g;
function yt(t2) {
  return t2.replace(bt, "$1-$2").toLowerCase();
}
function xt(t2, e2) {
  return nt(t2[e2]) ? t2[e2] : t2.dataset ? t2.dataset[e2] : t2.getAttribute("data-".concat(yt(e2)));
}
function Mt(t2, e2, i2) {
  nt(i2) ? t2[e2] = i2 : t2.dataset ? t2.dataset[e2] = i2 : t2.setAttribute("data-".concat(yt(e2)), i2);
}
var Ct = /\s\s*/, Dt = function() {
  var t2 = false;
  if (h) {
    var e2 = false, i2 = function() {
    }, a2 = Object.defineProperty({}, "once", { get: function() {
      return t2 = true, e2;
    }, set: function(t3) {
      e2 = t3;
    } });
    s.addEventListener("test", i2, a2), s.removeEventListener("test", i2, a2);
  }
  return t2;
}();
function Bt(t2, e2, i2) {
  var a2 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {}, n2 = i2;
  e2.trim().split(Ct).forEach(function(e3) {
    if (!Dt) {
      var o2 = t2.listeners;
      o2 && o2[e3] && o2[e3][i2] && (n2 = o2[e3][i2], delete o2[e3][i2], 0 === Object.keys(o2[e3]).length && delete o2[e3], 0 === Object.keys(o2).length && delete t2.listeners);
    }
    t2.removeEventListener(e3, n2, a2);
  });
}
function kt(t2, e2, i2) {
  var a2 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {}, n2 = i2;
  e2.trim().split(Ct).forEach(function(e3) {
    if (a2.once && !Dt) {
      var o2 = t2.listeners, r2 = void 0 === o2 ? {} : o2;
      n2 = function() {
        delete r2[e3][i2], t2.removeEventListener(e3, n2, a2);
        for (var o3 = arguments.length, h2 = new Array(o3), s2 = 0; s2 < o3; s2++)
          h2[s2] = arguments[s2];
        i2.apply(t2, h2);
      }, r2[e3] || (r2[e3] = {}), r2[e3][i2] && t2.removeEventListener(e3, r2[e3][i2], a2), r2[e3][i2] = n2, t2.listeners = r2;
    }
    t2.addEventListener(e3, n2, a2);
  });
}
function Ot(t2, e2, i2) {
  var a2;
  return ht(Event) && ht(CustomEvent) ? a2 = new CustomEvent(e2, { detail: i2, bubbles: true, cancelable: true }) : (a2 = document.createEvent("CustomEvent")).initCustomEvent(e2, true, true, i2), t2.dispatchEvent(a2);
}
function Tt(t2) {
  var e2 = t2.getBoundingClientRect();
  return { left: e2.left + (window.pageXOffset - document.documentElement.clientLeft), top: e2.top + (window.pageYOffset - document.documentElement.clientTop) };
}
var Et = s.location, Wt = /^(\w+:)\/\/([^:/?#]*):?(\d*)/i;
function Ht(t2) {
  var e2 = t2.match(Wt);
  return null !== e2 && (e2[1] !== Et.protocol || e2[2] !== Et.hostname || e2[3] !== Et.port);
}
function Nt(t2) {
  var e2 = "timestamp=".concat(new Date().getTime());
  return t2 + (-1 === t2.indexOf("?") ? "?" : "&") + e2;
}
function Lt(t2) {
  var e2 = t2.rotate, i2 = t2.scaleX, a2 = t2.scaleY, n2 = t2.translateX, o2 = t2.translateY, r2 = [];
  et(n2) && 0 !== n2 && r2.push("translateX(".concat(n2, "px)")), et(o2) && 0 !== o2 && r2.push("translateY(".concat(o2, "px)")), et(e2) && 0 !== e2 && r2.push("rotate(".concat(e2, "deg)")), et(i2) && 1 !== i2 && r2.push("scaleX(".concat(i2, ")")), et(a2) && 1 !== a2 && r2.push("scaleY(".concat(a2, ")"));
  var h2 = r2.length ? r2.join(" ") : "none";
  return { WebkitTransform: h2, msTransform: h2, transform: h2 };
}
function zt(t2, i2) {
  var a2 = t2.pageX, n2 = t2.pageY, o2 = { endX: a2, endY: n2 };
  return i2 ? o2 : e({ startX: a2, startY: n2 }, o2);
}
function Yt(t2) {
  var e2 = t2.aspectRatio, i2 = t2.height, a2 = t2.width, n2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "contain", o2 = it(a2), r2 = it(i2);
  if (o2 && r2) {
    var h2 = i2 * e2;
    "contain" === n2 && h2 > a2 || "cover" === n2 && h2 < a2 ? i2 = a2 / e2 : a2 = i2 * e2;
  } else
    o2 ? i2 = a2 / e2 : r2 && (a2 = i2 * e2);
  return { width: a2, height: i2 };
}
var Xt = String.fromCharCode;
var Rt = /^data:.*,/;
function St(t2) {
  var e2, i2 = new DataView(t2);
  try {
    var a2, n2, o2;
    if (255 === i2.getUint8(0) && 216 === i2.getUint8(1))
      for (var r2 = i2.byteLength, h2 = 2; h2 + 1 < r2; ) {
        if (255 === i2.getUint8(h2) && 225 === i2.getUint8(h2 + 1)) {
          n2 = h2;
          break;
        }
        h2 += 1;
      }
    if (n2) {
      var s2 = n2 + 10;
      if ("Exif" === function(t3, e3, i3) {
        var a3 = "";
        i3 += e3;
        for (var n3 = e3; n3 < i3; n3 += 1)
          a3 += Xt(t3.getUint8(n3));
        return a3;
      }(i2, n2 + 4, 4)) {
        var c2 = i2.getUint16(s2);
        if (((a2 = 18761 === c2) || 19789 === c2) && 42 === i2.getUint16(s2 + 2, a2)) {
          var l2 = i2.getUint32(s2 + 4, a2);
          l2 >= 8 && (o2 = s2 + l2);
        }
      }
    }
    if (o2) {
      var d2, p2, m2 = i2.getUint16(o2, a2);
      for (p2 = 0; p2 < m2; p2 += 1)
        if (d2 = o2 + 12 * p2 + 2, 274 === i2.getUint16(d2, a2)) {
          d2 += 8, e2 = i2.getUint16(d2, a2), i2.setUint16(d2, 1, a2);
          break;
        }
    }
  } catch (t3) {
    e2 = 1;
  }
  return e2;
}
var At = { render: function() {
  this.initContainer(), this.initCanvas(), this.initCropBox(), this.renderCanvas(), this.cropped && this.renderCropBox();
}, initContainer: function() {
  var t2 = this.element, e2 = this.options, i2 = this.container, a2 = this.cropper, n2 = Number(e2.minContainerWidth), o2 = Number(e2.minContainerHeight);
  ft(a2, k), vt(t2, k);
  var r2 = { width: Math.max(i2.offsetWidth, n2 >= 0 ? n2 : 200), height: Math.max(i2.offsetHeight, o2 >= 0 ? o2 : 100) };
  this.containerData = r2, gt(a2, { width: r2.width, height: r2.height }), ft(t2, k), vt(a2, k);
}, initCanvas: function() {
  var t2 = this.containerData, e2 = this.imageData, i2 = this.options.viewMode, a2 = Math.abs(e2.rotate) % 180 == 90, n2 = a2 ? e2.naturalHeight : e2.naturalWidth, o2 = a2 ? e2.naturalWidth : e2.naturalHeight, r2 = n2 / o2, h2 = t2.width, s2 = t2.height;
  t2.height * r2 > t2.width ? 3 === i2 ? h2 = t2.height * r2 : s2 = t2.width / r2 : 3 === i2 ? s2 = t2.width / r2 : h2 = t2.height * r2;
  var c2 = { aspectRatio: r2, naturalWidth: n2, naturalHeight: o2, width: h2, height: s2 };
  this.canvasData = c2, this.limited = 1 === i2 || 2 === i2, this.limitCanvas(true, true), c2.width = Math.min(Math.max(c2.width, c2.minWidth), c2.maxWidth), c2.height = Math.min(Math.max(c2.height, c2.minHeight), c2.maxHeight), c2.left = (t2.width - c2.width) / 2, c2.top = (t2.height - c2.height) / 2, c2.oldLeft = c2.left, c2.oldTop = c2.top, this.initialCanvasData = dt({}, c2);
}, limitCanvas: function(t2, e2) {
  var i2 = this.options, a2 = this.containerData, n2 = this.canvasData, o2 = this.cropBoxData, r2 = i2.viewMode, h2 = n2.aspectRatio, s2 = this.cropped && o2;
  if (t2) {
    var c2 = Number(i2.minCanvasWidth) || 0, l2 = Number(i2.minCanvasHeight) || 0;
    r2 > 1 ? (c2 = Math.max(c2, a2.width), l2 = Math.max(l2, a2.height), 3 === r2 && (l2 * h2 > c2 ? c2 = l2 * h2 : l2 = c2 / h2)) : r2 > 0 && (c2 ? c2 = Math.max(c2, s2 ? o2.width : 0) : l2 ? l2 = Math.max(l2, s2 ? o2.height : 0) : s2 && (c2 = o2.width, (l2 = o2.height) * h2 > c2 ? c2 = l2 * h2 : l2 = c2 / h2));
    var d2 = Yt({ aspectRatio: h2, width: c2, height: l2 });
    c2 = d2.width, l2 = d2.height, n2.minWidth = c2, n2.minHeight = l2, n2.maxWidth = 1 / 0, n2.maxHeight = 1 / 0;
  }
  if (e2)
    if (r2 > (s2 ? 0 : 1)) {
      var p2 = a2.width - n2.width, m2 = a2.height - n2.height;
      n2.minLeft = Math.min(0, p2), n2.minTop = Math.min(0, m2), n2.maxLeft = Math.max(0, p2), n2.maxTop = Math.max(0, m2), s2 && this.limited && (n2.minLeft = Math.min(o2.left, o2.left + (o2.width - n2.width)), n2.minTop = Math.min(o2.top, o2.top + (o2.height - n2.height)), n2.maxLeft = o2.left, n2.maxTop = o2.top, 2 === r2 && (n2.width >= a2.width && (n2.minLeft = Math.min(0, p2), n2.maxLeft = Math.max(0, p2)), n2.height >= a2.height && (n2.minTop = Math.min(0, m2), n2.maxTop = Math.max(0, m2))));
    } else
      n2.minLeft = -n2.width, n2.minTop = -n2.height, n2.maxLeft = a2.width, n2.maxTop = a2.height;
}, renderCanvas: function(t2, e2) {
  var i2 = this.canvasData, a2 = this.imageData;
  if (e2) {
    var n2 = function(t3) {
      var e3 = t3.width, i3 = t3.height, a3 = t3.degree;
      if (90 == (a3 = Math.abs(a3) % 180))
        return { width: i3, height: e3 };
      var n3 = a3 % 90 * Math.PI / 180, o3 = Math.sin(n3), r3 = Math.cos(n3), h3 = e3 * r3 + i3 * o3, s3 = e3 * o3 + i3 * r3;
      return a3 > 90 ? { width: s3, height: h3 } : { width: h3, height: s3 };
    }({ width: a2.naturalWidth * Math.abs(a2.scaleX || 1), height: a2.naturalHeight * Math.abs(a2.scaleY || 1), degree: a2.rotate || 0 }), o2 = n2.width, r2 = n2.height, h2 = i2.width * (o2 / i2.naturalWidth), s2 = i2.height * (r2 / i2.naturalHeight);
    i2.left -= (h2 - i2.width) / 2, i2.top -= (s2 - i2.height) / 2, i2.width = h2, i2.height = s2, i2.aspectRatio = o2 / r2, i2.naturalWidth = o2, i2.naturalHeight = r2, this.limitCanvas(true, false);
  }
  (i2.width > i2.maxWidth || i2.width < i2.minWidth) && (i2.left = i2.oldLeft), (i2.height > i2.maxHeight || i2.height < i2.minHeight) && (i2.top = i2.oldTop), i2.width = Math.min(Math.max(i2.width, i2.minWidth), i2.maxWidth), i2.height = Math.min(Math.max(i2.height, i2.minHeight), i2.maxHeight), this.limitCanvas(false, true), i2.left = Math.min(Math.max(i2.left, i2.minLeft), i2.maxLeft), i2.top = Math.min(Math.max(i2.top, i2.minTop), i2.maxTop), i2.oldLeft = i2.left, i2.oldTop = i2.top, gt(this.canvas, dt({ width: i2.width, height: i2.height }, Lt({ translateX: i2.left, translateY: i2.top }))), this.renderImage(t2), this.cropped && this.limited && this.limitCropBox(true, true);
}, renderImage: function(t2) {
  var e2 = this.canvasData, i2 = this.imageData, a2 = i2.naturalWidth * (e2.width / e2.naturalWidth), n2 = i2.naturalHeight * (e2.height / e2.naturalHeight);
  dt(i2, { width: a2, height: n2, left: (e2.width - a2) / 2, top: (e2.height - n2) / 2 }), gt(this.image, dt({ width: i2.width, height: i2.height }, Lt(dt({ translateX: i2.left, translateY: i2.top }, i2)))), t2 && this.output();
}, initCropBox: function() {
  var t2 = this.options, e2 = this.canvasData, i2 = t2.aspectRatio || t2.initialAspectRatio, a2 = Number(t2.autoCropArea) || 0.8, n2 = { width: e2.width, height: e2.height };
  i2 && (e2.height * i2 > e2.width ? n2.height = n2.width / i2 : n2.width = n2.height * i2), this.cropBoxData = n2, this.limitCropBox(true, true), n2.width = Math.min(Math.max(n2.width, n2.minWidth), n2.maxWidth), n2.height = Math.min(Math.max(n2.height, n2.minHeight), n2.maxHeight), n2.width = Math.max(n2.minWidth, n2.width * a2), n2.height = Math.max(n2.minHeight, n2.height * a2), n2.left = e2.left + (e2.width - n2.width) / 2, n2.top = e2.top + (e2.height - n2.height) / 2, n2.oldLeft = n2.left, n2.oldTop = n2.top, this.initialCropBoxData = dt({}, n2);
}, limitCropBox: function(t2, e2) {
  var i2 = this.options, a2 = this.containerData, n2 = this.canvasData, o2 = this.cropBoxData, r2 = this.limited, h2 = i2.aspectRatio;
  if (t2) {
    var s2 = Number(i2.minCropBoxWidth) || 0, c2 = Number(i2.minCropBoxHeight) || 0, l2 = r2 ? Math.min(a2.width, n2.width, n2.width + n2.left, a2.width - n2.left) : a2.width, d2 = r2 ? Math.min(a2.height, n2.height, n2.height + n2.top, a2.height - n2.top) : a2.height;
    s2 = Math.min(s2, a2.width), c2 = Math.min(c2, a2.height), h2 && (s2 && c2 ? c2 * h2 > s2 ? c2 = s2 / h2 : s2 = c2 * h2 : s2 ? c2 = s2 / h2 : c2 && (s2 = c2 * h2), d2 * h2 > l2 ? d2 = l2 / h2 : l2 = d2 * h2), o2.minWidth = Math.min(s2, l2), o2.minHeight = Math.min(c2, d2), o2.maxWidth = l2, o2.maxHeight = d2;
  }
  e2 && (r2 ? (o2.minLeft = Math.max(0, n2.left), o2.minTop = Math.max(0, n2.top), o2.maxLeft = Math.min(a2.width, n2.left + n2.width) - o2.width, o2.maxTop = Math.min(a2.height, n2.top + n2.height) - o2.height) : (o2.minLeft = 0, o2.minTop = 0, o2.maxLeft = a2.width - o2.width, o2.maxTop = a2.height - o2.height));
}, renderCropBox: function() {
  var t2 = this.options, e2 = this.containerData, i2 = this.cropBoxData;
  (i2.width > i2.maxWidth || i2.width < i2.minWidth) && (i2.left = i2.oldLeft), (i2.height > i2.maxHeight || i2.height < i2.minHeight) && (i2.top = i2.oldTop), i2.width = Math.min(Math.max(i2.width, i2.minWidth), i2.maxWidth), i2.height = Math.min(Math.max(i2.height, i2.minHeight), i2.maxHeight), this.limitCropBox(false, true), i2.left = Math.min(Math.max(i2.left, i2.minLeft), i2.maxLeft), i2.top = Math.min(Math.max(i2.top, i2.minTop), i2.maxTop), i2.oldLeft = i2.left, i2.oldTop = i2.top, t2.movable && t2.cropBoxMovable && Mt(this.face, H, i2.width >= e2.width && i2.height >= e2.height ? u : p), gt(this.cropBox, dt({ width: i2.width, height: i2.height }, Lt({ translateX: i2.left, translateY: i2.top }))), this.cropped && this.limited && this.limitCanvas(true, true), this.disabled || this.output();
}, output: function() {
  this.preview(), Ot(this.element, X, this.getData());
} }, jt = { initPreview: function() {
  var t2 = this.element, e2 = this.crossOrigin, i2 = this.options.preview, a2 = e2 ? this.crossOriginUrl : this.url, n2 = t2.alt || "The image to preview", o2 = document.createElement("img");
  if (e2 && (o2.crossOrigin = e2), o2.src = a2, o2.alt = n2, this.viewBox.appendChild(o2), this.viewBoxImage = o2, i2) {
    var r2 = i2;
    "string" == typeof i2 ? r2 = t2.ownerDocument.querySelectorAll(i2) : i2.querySelector && (r2 = [i2]), this.previews = r2, lt(r2, function(t3) {
      var i3 = document.createElement("img");
      Mt(t3, N, { width: t3.offsetWidth, height: t3.offsetHeight, html: t3.innerHTML }), e2 && (i3.crossOrigin = e2), i3.src = a2, i3.alt = n2, i3.style.cssText = 'display:block;width:100%;height:auto;min-width:0!important;min-height:0!important;max-width:none!important;max-height:none!important;image-orientation:0deg!important;"', t3.innerHTML = "", t3.appendChild(i3);
    });
  }
}, resetPreview: function() {
  lt(this.previews, function(t2) {
    var e2 = xt(t2, N);
    gt(t2, { width: e2.width, height: e2.height }), t2.innerHTML = e2.html, function(t3, e3) {
      if (nt(t3[e3]))
        try {
          delete t3[e3];
        } catch (i2) {
          t3[e3] = void 0;
        }
      else if (t3.dataset)
        try {
          delete t3.dataset[e3];
        } catch (i2) {
          t3.dataset[e3] = void 0;
        }
      else
        t3.removeAttribute("data-".concat(yt(e3)));
    }(t2, N);
  });
}, preview: function() {
  var t2 = this.imageData, e2 = this.canvasData, i2 = this.cropBoxData, a2 = i2.width, n2 = i2.height, o2 = t2.width, r2 = t2.height, h2 = i2.left - e2.left - t2.left, s2 = i2.top - e2.top - t2.top;
  this.cropped && !this.disabled && (gt(this.viewBoxImage, dt({ width: o2, height: r2 }, Lt(dt({ translateX: -h2, translateY: -s2 }, t2)))), lt(this.previews, function(e3) {
    var i3 = xt(e3, N), c2 = i3.width, l2 = i3.height, d2 = c2, p2 = l2, m2 = 1;
    a2 && (p2 = n2 * (m2 = c2 / a2)), n2 && p2 > l2 && (d2 = a2 * (m2 = l2 / n2), p2 = l2), gt(e3, { width: d2, height: p2 }), gt(e3.getElementsByTagName("img")[0], dt({ width: o2 * m2, height: r2 * m2 }, Lt(dt({ translateX: -h2 * m2, translateY: -s2 * m2 }, t2))));
  }));
} }, Pt = { bind: function() {
  var t2 = this.element, e2 = this.options, i2 = this.cropper;
  ht(e2.cropstart) && kt(t2, A, e2.cropstart), ht(e2.cropmove) && kt(t2, S, e2.cropmove), ht(e2.cropend) && kt(t2, R, e2.cropend), ht(e2.crop) && kt(t2, X, e2.crop), ht(e2.zoom) && kt(t2, K, e2.zoom), kt(i2, P, this.onCropStart = this.cropStart.bind(this)), e2.zoomable && e2.zoomOnWheel && kt(i2, Q, this.onWheel = this.wheel.bind(this), { passive: false, capture: true }), e2.toggleDragModeOnDblclick && kt(i2, j, this.onDblclick = this.dblclick.bind(this)), kt(t2.ownerDocument, I, this.onCropMove = this.cropMove.bind(this)), kt(t2.ownerDocument, U, this.onCropEnd = this.cropEnd.bind(this)), e2.responsive && kt(window, $, this.onResize = this.resize.bind(this));
}, unbind: function() {
  var t2 = this.element, e2 = this.options, i2 = this.cropper;
  ht(e2.cropstart) && Bt(t2, A, e2.cropstart), ht(e2.cropmove) && Bt(t2, S, e2.cropmove), ht(e2.cropend) && Bt(t2, R, e2.cropend), ht(e2.crop) && Bt(t2, X, e2.crop), ht(e2.zoom) && Bt(t2, K, e2.zoom), Bt(i2, P, this.onCropStart), e2.zoomable && e2.zoomOnWheel && Bt(i2, Q, this.onWheel, { passive: false, capture: true }), e2.toggleDragModeOnDblclick && Bt(i2, j, this.onDblclick), Bt(t2.ownerDocument, I, this.onCropMove), Bt(t2.ownerDocument, U, this.onCropEnd), e2.responsive && Bt(window, $, this.onResize);
} }, It = { resize: function() {
  if (!this.disabled) {
    var t2, e2, i2 = this.options, a2 = this.container, n2 = this.containerData, o2 = a2.offsetWidth / n2.width, r2 = a2.offsetHeight / n2.height, h2 = Math.abs(o2 - 1) > Math.abs(r2 - 1) ? o2 : r2;
    if (1 !== h2)
      i2.restore && (t2 = this.getCanvasData(), e2 = this.getCropBoxData()), this.render(), i2.restore && (this.setCanvasData(lt(t2, function(e3, i3) {
        t2[i3] = e3 * h2;
      })), this.setCropBoxData(lt(e2, function(t3, i3) {
        e2[i3] = t3 * h2;
      })));
  }
}, dblclick: function() {
  var t2, e2;
  this.disabled || this.options.dragMode === Y || this.setDragMode((t2 = this.dragBox, e2 = D, (t2.classList ? t2.classList.contains(e2) : t2.className.indexOf(e2) > -1) ? z : L));
}, wheel: function(t2) {
  var e2 = this, i2 = Number(this.options.wheelZoomRatio) || 0.1, a2 = 1;
  this.disabled || (t2.preventDefault(), this.wheeling || (this.wheeling = true, setTimeout(function() {
    e2.wheeling = false;
  }, 50), t2.deltaY ? a2 = t2.deltaY > 0 ? 1 : -1 : t2.wheelDelta ? a2 = -t2.wheelDelta / 120 : t2.detail && (a2 = t2.detail > 0 ? 1 : -1), this.zoom(-a2 * i2, t2)));
}, cropStart: function(t2) {
  var e2 = t2.buttons, i2 = t2.button;
  if (!(this.disabled || ("mousedown" === t2.type || "pointerdown" === t2.type && "mouse" === t2.pointerType) && (et(e2) && 1 !== e2 || et(i2) && 0 !== i2 || t2.ctrlKey))) {
    var a2, n2 = this.options, o2 = this.pointers;
    t2.changedTouches ? lt(t2.changedTouches, function(t3) {
      o2[t3.identifier] = zt(t3);
    }) : o2[t2.pointerId || 0] = zt(t2), a2 = Object.keys(o2).length > 1 && n2.zoomable && n2.zoomOnTouch ? g : xt(t2.target, H), G.test(a2) && false !== Ot(this.element, A, { originalEvent: t2, action: a2 }) && (t2.preventDefault(), this.action = a2, this.cropping = false, a2 === m && (this.cropping = true, ft(this.dragBox, E)));
  }
}, cropMove: function(t2) {
  var e2 = this.action;
  if (!this.disabled && e2) {
    var i2 = this.pointers;
    t2.preventDefault(), false !== Ot(this.element, S, { originalEvent: t2, action: e2 }) && (t2.changedTouches ? lt(t2.changedTouches, function(t3) {
      dt(i2[t3.identifier] || {}, zt(t3, true));
    }) : dt(i2[t2.pointerId || 0] || {}, zt(t2, true)), this.change(t2));
  }
}, cropEnd: function(t2) {
  if (!this.disabled) {
    var e2 = this.action, i2 = this.pointers;
    t2.changedTouches ? lt(t2.changedTouches, function(t3) {
      delete i2[t3.identifier];
    }) : delete i2[t2.pointerId || 0], e2 && (t2.preventDefault(), Object.keys(i2).length || (this.action = ""), this.cropping && (this.cropping = false, wt(this.dragBox, E, this.cropped && this.options.modal)), Ot(this.element, R, { originalEvent: t2, action: e2 }));
  }
} }, Ut = { change: function(t2) {
  var i2, a2 = this.options, n2 = this.canvasData, o2 = this.containerData, r2 = this.cropBoxData, h2 = this.pointers, s2 = this.action, c2 = a2.aspectRatio, l2 = r2.left, d2 = r2.top, D2 = r2.width, B2 = r2.height, O2 = l2 + D2, T2 = d2 + B2, E2 = 0, W2 = 0, H2 = o2.width, N2 = o2.height, L2 = true;
  !c2 && t2.shiftKey && (c2 = D2 && B2 ? D2 / B2 : 1), this.limited && (E2 = r2.minLeft, W2 = r2.minTop, H2 = E2 + Math.min(o2.width, n2.width, n2.left + n2.width), N2 = W2 + Math.min(o2.height, n2.height, n2.top + n2.height));
  var z2 = h2[Object.keys(h2)[0]], Y2 = { x: z2.endX - z2.startX, y: z2.endY - z2.startY }, X2 = function(t3) {
    switch (t3) {
      case f:
        O2 + Y2.x > H2 && (Y2.x = H2 - O2);
        break;
      case v:
        l2 + Y2.x < E2 && (Y2.x = E2 - l2);
        break;
      case b:
        d2 + Y2.y < W2 && (Y2.y = W2 - d2);
        break;
      case w:
        T2 + Y2.y > N2 && (Y2.y = N2 - T2);
    }
  };
  switch (s2) {
    case p:
      l2 += Y2.x, d2 += Y2.y;
      break;
    case f:
      if (Y2.x >= 0 && (O2 >= H2 || c2 && (d2 <= W2 || T2 >= N2))) {
        L2 = false;
        break;
      }
      X2(f), (D2 += Y2.x) < 0 && (s2 = v, l2 -= D2 = -D2), c2 && (B2 = D2 / c2, d2 += (r2.height - B2) / 2);
      break;
    case b:
      if (Y2.y <= 0 && (d2 <= W2 || c2 && (l2 <= E2 || O2 >= H2))) {
        L2 = false;
        break;
      }
      X2(b), B2 -= Y2.y, d2 += Y2.y, B2 < 0 && (s2 = w, d2 -= B2 = -B2), c2 && (D2 = B2 * c2, l2 += (r2.width - D2) / 2);
      break;
    case v:
      if (Y2.x <= 0 && (l2 <= E2 || c2 && (d2 <= W2 || T2 >= N2))) {
        L2 = false;
        break;
      }
      X2(v), D2 -= Y2.x, l2 += Y2.x, D2 < 0 && (s2 = f, l2 -= D2 = -D2), c2 && (B2 = D2 / c2, d2 += (r2.height - B2) / 2);
      break;
    case w:
      if (Y2.y >= 0 && (T2 >= N2 || c2 && (l2 <= E2 || O2 >= H2))) {
        L2 = false;
        break;
      }
      X2(w), (B2 += Y2.y) < 0 && (s2 = b, d2 -= B2 = -B2), c2 && (D2 = B2 * c2, l2 += (r2.width - D2) / 2);
      break;
    case y:
      if (c2) {
        if (Y2.y <= 0 && (d2 <= W2 || O2 >= H2)) {
          L2 = false;
          break;
        }
        X2(b), B2 -= Y2.y, d2 += Y2.y, D2 = B2 * c2;
      } else
        X2(b), X2(f), Y2.x >= 0 ? O2 < H2 ? D2 += Y2.x : Y2.y <= 0 && d2 <= W2 && (L2 = false) : D2 += Y2.x, Y2.y <= 0 ? d2 > W2 && (B2 -= Y2.y, d2 += Y2.y) : (B2 -= Y2.y, d2 += Y2.y);
      D2 < 0 && B2 < 0 ? (s2 = C, d2 -= B2 = -B2, l2 -= D2 = -D2) : D2 < 0 ? (s2 = x, l2 -= D2 = -D2) : B2 < 0 && (s2 = M, d2 -= B2 = -B2);
      break;
    case x:
      if (c2) {
        if (Y2.y <= 0 && (d2 <= W2 || l2 <= E2)) {
          L2 = false;
          break;
        }
        X2(b), B2 -= Y2.y, d2 += Y2.y, D2 = B2 * c2, l2 += r2.width - D2;
      } else
        X2(b), X2(v), Y2.x <= 0 ? l2 > E2 ? (D2 -= Y2.x, l2 += Y2.x) : Y2.y <= 0 && d2 <= W2 && (L2 = false) : (D2 -= Y2.x, l2 += Y2.x), Y2.y <= 0 ? d2 > W2 && (B2 -= Y2.y, d2 += Y2.y) : (B2 -= Y2.y, d2 += Y2.y);
      D2 < 0 && B2 < 0 ? (s2 = M, d2 -= B2 = -B2, l2 -= D2 = -D2) : D2 < 0 ? (s2 = y, l2 -= D2 = -D2) : B2 < 0 && (s2 = C, d2 -= B2 = -B2);
      break;
    case C:
      if (c2) {
        if (Y2.x <= 0 && (l2 <= E2 || T2 >= N2)) {
          L2 = false;
          break;
        }
        X2(v), D2 -= Y2.x, l2 += Y2.x, B2 = D2 / c2;
      } else
        X2(w), X2(v), Y2.x <= 0 ? l2 > E2 ? (D2 -= Y2.x, l2 += Y2.x) : Y2.y >= 0 && T2 >= N2 && (L2 = false) : (D2 -= Y2.x, l2 += Y2.x), Y2.y >= 0 ? T2 < N2 && (B2 += Y2.y) : B2 += Y2.y;
      D2 < 0 && B2 < 0 ? (s2 = y, d2 -= B2 = -B2, l2 -= D2 = -D2) : D2 < 0 ? (s2 = M, l2 -= D2 = -D2) : B2 < 0 && (s2 = x, d2 -= B2 = -B2);
      break;
    case M:
      if (c2) {
        if (Y2.x >= 0 && (O2 >= H2 || T2 >= N2)) {
          L2 = false;
          break;
        }
        X2(f), B2 = (D2 += Y2.x) / c2;
      } else
        X2(w), X2(f), Y2.x >= 0 ? O2 < H2 ? D2 += Y2.x : Y2.y >= 0 && T2 >= N2 && (L2 = false) : D2 += Y2.x, Y2.y >= 0 ? T2 < N2 && (B2 += Y2.y) : B2 += Y2.y;
      D2 < 0 && B2 < 0 ? (s2 = x, d2 -= B2 = -B2, l2 -= D2 = -D2) : D2 < 0 ? (s2 = C, l2 -= D2 = -D2) : B2 < 0 && (s2 = y, d2 -= B2 = -B2);
      break;
    case u:
      this.move(Y2.x, Y2.y), L2 = false;
      break;
    case g:
      this.zoom(function(t3) {
        var i3 = e({}, t3), a3 = 0;
        return lt(t3, function(t4, e2) {
          delete i3[e2], lt(i3, function(e3) {
            var i4 = Math.abs(t4.startX - e3.startX), n3 = Math.abs(t4.startY - e3.startY), o3 = Math.abs(t4.endX - e3.endX), r3 = Math.abs(t4.endY - e3.endY), h3 = Math.sqrt(i4 * i4 + n3 * n3), s3 = (Math.sqrt(o3 * o3 + r3 * r3) - h3) / h3;
            Math.abs(s3) > Math.abs(a3) && (a3 = s3);
          });
        }), a3;
      }(h2), t2), L2 = false;
      break;
    case m:
      if (!Y2.x || !Y2.y) {
        L2 = false;
        break;
      }
      i2 = Tt(this.cropper), l2 = z2.startX - i2.left, d2 = z2.startY - i2.top, D2 = r2.minWidth, B2 = r2.minHeight, Y2.x > 0 ? s2 = Y2.y > 0 ? M : y : Y2.x < 0 && (l2 -= D2, s2 = Y2.y > 0 ? C : x), Y2.y < 0 && (d2 -= B2), this.cropped || (vt(this.cropBox, k), this.cropped = true, this.limited && this.limitCropBox(true, true));
  }
  L2 && (r2.width = D2, r2.height = B2, r2.left = l2, r2.top = d2, this.action = s2, this.renderCropBox()), lt(h2, function(t3) {
    t3.startX = t3.endX, t3.startY = t3.endY;
  });
} }, qt = { crop: function() {
  return !this.ready || this.cropped || this.disabled || (this.cropped = true, this.limitCropBox(true, true), this.options.modal && ft(this.dragBox, E), vt(this.cropBox, k), this.setCropBoxData(this.initialCropBoxData)), this;
}, reset: function() {
  return this.ready && !this.disabled && (this.imageData = dt({}, this.initialImageData), this.canvasData = dt({}, this.initialCanvasData), this.cropBoxData = dt({}, this.initialCropBoxData), this.renderCanvas(), this.cropped && this.renderCropBox()), this;
}, clear: function() {
  return this.cropped && !this.disabled && (dt(this.cropBoxData, { left: 0, top: 0, width: 0, height: 0 }), this.cropped = false, this.renderCropBox(), this.limitCanvas(true, true), this.renderCanvas(), vt(this.dragBox, E), ft(this.cropBox, k)), this;
}, replace: function(t2) {
  var e2 = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
  return !this.disabled && t2 && (this.isImg && (this.element.src = t2), e2 ? (this.url = t2, this.image.src = t2, this.ready && (this.viewBoxImage.src = t2, lt(this.previews, function(e3) {
    e3.getElementsByTagName("img")[0].src = t2;
  }))) : (this.isImg && (this.replaced = true), this.options.data = null, this.uncreate(), this.load(t2))), this;
}, enable: function() {
  return this.ready && this.disabled && (this.disabled = false, vt(this.cropper, B)), this;
}, disable: function() {
  return this.ready && !this.disabled && (this.disabled = true, ft(this.cropper, B)), this;
}, destroy: function() {
  var t2 = this.element;
  return t2[d] ? (t2[d] = void 0, this.isImg && this.replaced && (t2.src = this.originalUrl), this.uncreate(), this) : this;
}, move: function(t2) {
  var e2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : t2, i2 = this.canvasData, a2 = i2.left, n2 = i2.top;
  return this.moveTo(at(t2) ? t2 : a2 + Number(t2), at(e2) ? e2 : n2 + Number(e2));
}, moveTo: function(t2) {
  var e2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : t2, i2 = this.canvasData, a2 = false;
  return t2 = Number(t2), e2 = Number(e2), this.ready && !this.disabled && this.options.movable && (et(t2) && (i2.left = t2, a2 = true), et(e2) && (i2.top = e2, a2 = true), a2 && this.renderCanvas(true)), this;
}, zoom: function(t2, e2) {
  var i2 = this.canvasData;
  return t2 = (t2 = Number(t2)) < 0 ? 1 / (1 - t2) : 1 + t2, this.zoomTo(i2.width * t2 / i2.naturalWidth, null, e2);
}, zoomTo: function(t2, e2, i2) {
  var a2 = this.options, n2 = this.canvasData, o2 = n2.width, r2 = n2.height, h2 = n2.naturalWidth, s2 = n2.naturalHeight;
  if ((t2 = Number(t2)) >= 0 && this.ready && !this.disabled && a2.zoomable) {
    var c2 = h2 * t2, l2 = s2 * t2;
    if (false === Ot(this.element, K, { ratio: t2, oldRatio: o2 / h2, originalEvent: i2 }))
      return this;
    if (i2) {
      var d2 = this.pointers, p2 = Tt(this.cropper), m2 = d2 && Object.keys(d2).length ? function(t3) {
        var e3 = 0, i3 = 0, a3 = 0;
        return lt(t3, function(t4) {
          var n3 = t4.startX, o3 = t4.startY;
          e3 += n3, i3 += o3, a3 += 1;
        }), { pageX: e3 /= a3, pageY: i3 /= a3 };
      }(d2) : { pageX: i2.pageX, pageY: i2.pageY };
      n2.left -= (c2 - o2) * ((m2.pageX - p2.left - n2.left) / o2), n2.top -= (l2 - r2) * ((m2.pageY - p2.top - n2.top) / r2);
    } else
      rt(e2) && et(e2.x) && et(e2.y) ? (n2.left -= (c2 - o2) * ((e2.x - n2.left) / o2), n2.top -= (l2 - r2) * ((e2.y - n2.top) / r2)) : (n2.left -= (c2 - o2) / 2, n2.top -= (l2 - r2) / 2);
    n2.width = c2, n2.height = l2, this.renderCanvas(true);
  }
  return this;
}, rotate: function(t2) {
  return this.rotateTo((this.imageData.rotate || 0) + Number(t2));
}, rotateTo: function(t2) {
  return et(t2 = Number(t2)) && this.ready && !this.disabled && this.options.rotatable && (this.imageData.rotate = t2 % 360, this.renderCanvas(true, true)), this;
}, scaleX: function(t2) {
  var e2 = this.imageData.scaleY;
  return this.scale(t2, et(e2) ? e2 : 1);
}, scaleY: function(t2) {
  var e2 = this.imageData.scaleX;
  return this.scale(et(e2) ? e2 : 1, t2);
}, scale: function(t2) {
  var e2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : t2, i2 = this.imageData, a2 = false;
  return t2 = Number(t2), e2 = Number(e2), this.ready && !this.disabled && this.options.scalable && (et(t2) && (i2.scaleX = t2, a2 = true), et(e2) && (i2.scaleY = e2, a2 = true), a2 && this.renderCanvas(true, true)), this;
}, getData: function() {
  var t2, e2 = arguments.length > 0 && void 0 !== arguments[0] && arguments[0], i2 = this.options, a2 = this.imageData, n2 = this.canvasData, o2 = this.cropBoxData;
  if (this.ready && this.cropped) {
    t2 = { x: o2.left - n2.left, y: o2.top - n2.top, width: o2.width, height: o2.height };
    var r2 = a2.width / a2.naturalWidth;
    if (lt(t2, function(e3, i3) {
      t2[i3] = e3 / r2;
    }), e2) {
      var h2 = Math.round(t2.y + t2.height), s2 = Math.round(t2.x + t2.width);
      t2.x = Math.round(t2.x), t2.y = Math.round(t2.y), t2.width = s2 - t2.x, t2.height = h2 - t2.y;
    }
  } else
    t2 = { x: 0, y: 0, width: 0, height: 0 };
  return i2.rotatable && (t2.rotate = a2.rotate || 0), i2.scalable && (t2.scaleX = a2.scaleX || 1, t2.scaleY = a2.scaleY || 1), t2;
}, setData: function(t2) {
  var e2 = this.options, i2 = this.imageData, a2 = this.canvasData, n2 = {};
  if (this.ready && !this.disabled && rt(t2)) {
    var o2 = false;
    e2.rotatable && et(t2.rotate) && t2.rotate !== i2.rotate && (i2.rotate = t2.rotate, o2 = true), e2.scalable && (et(t2.scaleX) && t2.scaleX !== i2.scaleX && (i2.scaleX = t2.scaleX, o2 = true), et(t2.scaleY) && t2.scaleY !== i2.scaleY && (i2.scaleY = t2.scaleY, o2 = true)), o2 && this.renderCanvas(true, true);
    var r2 = i2.width / i2.naturalWidth;
    et(t2.x) && (n2.left = t2.x * r2 + a2.left), et(t2.y) && (n2.top = t2.y * r2 + a2.top), et(t2.width) && (n2.width = t2.width * r2), et(t2.height) && (n2.height = t2.height * r2), this.setCropBoxData(n2);
  }
  return this;
}, getContainerData: function() {
  return this.ready ? dt({}, this.containerData) : {};
}, getImageData: function() {
  return this.sized ? dt({}, this.imageData) : {};
}, getCanvasData: function() {
  var t2 = this.canvasData, e2 = {};
  return this.ready && lt(["left", "top", "width", "height", "naturalWidth", "naturalHeight"], function(i2) {
    e2[i2] = t2[i2];
  }), e2;
}, setCanvasData: function(t2) {
  var e2 = this.canvasData, i2 = e2.aspectRatio;
  return this.ready && !this.disabled && rt(t2) && (et(t2.left) && (e2.left = t2.left), et(t2.top) && (e2.top = t2.top), et(t2.width) ? (e2.width = t2.width, e2.height = t2.width / i2) : et(t2.height) && (e2.height = t2.height, e2.width = t2.height * i2), this.renderCanvas(true)), this;
}, getCropBoxData: function() {
  var t2, e2 = this.cropBoxData;
  return this.ready && this.cropped && (t2 = { left: e2.left, top: e2.top, width: e2.width, height: e2.height }), t2 || {};
}, setCropBoxData: function(t2) {
  var e2, i2, a2 = this.cropBoxData, n2 = this.options.aspectRatio;
  return this.ready && this.cropped && !this.disabled && rt(t2) && (et(t2.left) && (a2.left = t2.left), et(t2.top) && (a2.top = t2.top), et(t2.width) && t2.width !== a2.width && (e2 = true, a2.width = t2.width), et(t2.height) && t2.height !== a2.height && (i2 = true, a2.height = t2.height), n2 && (e2 ? a2.height = a2.width / n2 : i2 && (a2.width = a2.height * n2)), this.renderCropBox()), this;
}, getCroppedCanvas: function() {
  var t2 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
  if (!this.ready || !window.HTMLCanvasElement)
    return null;
  var e2 = this.canvasData, i2 = function(t3, e3, i3, a3) {
    var n3 = e3.aspectRatio, r3 = e3.naturalWidth, h3 = e3.naturalHeight, s3 = e3.rotate, c3 = void 0 === s3 ? 0 : s3, l3 = e3.scaleX, d3 = void 0 === l3 ? 1 : l3, p3 = e3.scaleY, m3 = void 0 === p3 ? 1 : p3, u3 = i3.aspectRatio, g3 = i3.naturalWidth, f3 = i3.naturalHeight, v3 = a3.fillColor, w3 = void 0 === v3 ? "transparent" : v3, b3 = a3.imageSmoothingEnabled, y3 = void 0 === b3 || b3, x3 = a3.imageSmoothingQuality, M3 = void 0 === x3 ? "low" : x3, C3 = a3.maxWidth, D3 = void 0 === C3 ? 1 / 0 : C3, B3 = a3.maxHeight, k3 = void 0 === B3 ? 1 / 0 : B3, O3 = a3.minWidth, T3 = void 0 === O3 ? 0 : O3, E3 = a3.minHeight, W3 = void 0 === E3 ? 0 : E3, H3 = document.createElement("canvas"), N3 = H3.getContext("2d"), L2 = Yt({ aspectRatio: u3, width: D3, height: k3 }), z2 = Yt({ aspectRatio: u3, width: T3, height: W3 }, "cover"), Y2 = Math.min(L2.width, Math.max(z2.width, g3)), X2 = Math.min(L2.height, Math.max(z2.height, f3)), R2 = Yt({ aspectRatio: n3, width: D3, height: k3 }), S2 = Yt({ aspectRatio: n3, width: T3, height: W3 }, "cover"), A2 = Math.min(R2.width, Math.max(S2.width, r3)), j2 = Math.min(R2.height, Math.max(S2.height, h3)), P2 = [-A2 / 2, -j2 / 2, A2, j2];
    return H3.width = mt(Y2), H3.height = mt(X2), N3.fillStyle = w3, N3.fillRect(0, 0, Y2, X2), N3.save(), N3.translate(Y2 / 2, X2 / 2), N3.rotate(c3 * Math.PI / 180), N3.scale(d3, m3), N3.imageSmoothingEnabled = y3, N3.imageSmoothingQuality = M3, N3.drawImage.apply(N3, [t3].concat(o(P2.map(function(t4) {
      return Math.floor(mt(t4));
    })))), N3.restore(), H3;
  }(this.image, this.imageData, e2, t2);
  if (!this.cropped)
    return i2;
  var a2 = this.getData(), n2 = a2.x, r2 = a2.y, h2 = a2.width, s2 = a2.height, c2 = i2.width / Math.floor(e2.naturalWidth);
  1 !== c2 && (n2 *= c2, r2 *= c2, h2 *= c2, s2 *= c2);
  var l2 = h2 / s2, d2 = Yt({ aspectRatio: l2, width: t2.maxWidth || 1 / 0, height: t2.maxHeight || 1 / 0 }), p2 = Yt({ aspectRatio: l2, width: t2.minWidth || 0, height: t2.minHeight || 0 }, "cover"), m2 = Yt({ aspectRatio: l2, width: t2.width || (1 !== c2 ? i2.width : h2), height: t2.height || (1 !== c2 ? i2.height : s2) }), u2 = m2.width, g2 = m2.height;
  u2 = Math.min(d2.width, Math.max(p2.width, u2)), g2 = Math.min(d2.height, Math.max(p2.height, g2));
  var f2 = document.createElement("canvas"), v2 = f2.getContext("2d");
  f2.width = mt(u2), f2.height = mt(g2), v2.fillStyle = t2.fillColor || "transparent", v2.fillRect(0, 0, u2, g2);
  var w2 = t2.imageSmoothingEnabled, b2 = void 0 === w2 || w2, y2 = t2.imageSmoothingQuality;
  v2.imageSmoothingEnabled = b2, y2 && (v2.imageSmoothingQuality = y2);
  var x2, M2, C2, D2, B2, k2, O2 = i2.width, T2 = i2.height, E2 = n2, W2 = r2;
  E2 <= -h2 || E2 > O2 ? (E2 = 0, x2 = 0, C2 = 0, B2 = 0) : E2 <= 0 ? (C2 = -E2, E2 = 0, B2 = x2 = Math.min(O2, h2 + E2)) : E2 <= O2 && (C2 = 0, B2 = x2 = Math.min(h2, O2 - E2)), x2 <= 0 || W2 <= -s2 || W2 > T2 ? (W2 = 0, M2 = 0, D2 = 0, k2 = 0) : W2 <= 0 ? (D2 = -W2, W2 = 0, k2 = M2 = Math.min(T2, s2 + W2)) : W2 <= T2 && (D2 = 0, k2 = M2 = Math.min(s2, T2 - W2));
  var H2 = [E2, W2, x2, M2];
  if (B2 > 0 && k2 > 0) {
    var N2 = u2 / h2;
    H2.push(C2 * N2, D2 * N2, B2 * N2, k2 * N2);
  }
  return v2.drawImage.apply(v2, [i2].concat(o(H2.map(function(t3) {
    return Math.floor(mt(t3));
  })))), f2;
}, setAspectRatio: function(t2) {
  var e2 = this.options;
  return this.disabled || at(t2) || (e2.aspectRatio = Math.max(0, t2) || NaN, this.ready && (this.initCropBox(), this.cropped && this.renderCropBox())), this;
}, setDragMode: function(t2) {
  var e2 = this.options, i2 = this.dragBox, a2 = this.face;
  if (this.ready && !this.disabled) {
    var n2 = t2 === L, o2 = e2.movable && t2 === z;
    t2 = n2 || o2 ? t2 : Y, e2.dragMode = t2, Mt(i2, H, t2), wt(i2, D, n2), wt(i2, W, o2), e2.cropBoxMovable || (Mt(a2, H, t2), wt(a2, D, n2), wt(a2, W, o2));
  }
  return this;
} }, $t = s.Cropper, Qt = function() {
  function t2(e3) {
    var i3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    if (function(t3, e4) {
      if (!(t3 instanceof e4))
        throw new TypeError("Cannot call a class as a function");
    }(this, t2), !e3 || !J.test(e3.tagName))
      throw new Error("The first argument is required and must be an <img> or <canvas> element.");
    this.element = e3, this.options = dt({}, _, rt(i3) && i3), this.cropped = false, this.disabled = false, this.pointers = {}, this.ready = false, this.reloading = false, this.replaced = false, this.sized = false, this.sizing = false, this.init();
  }
  var e2, i2, n2;
  return e2 = t2, n2 = [{ key: "noConflict", value: function() {
    return window.Cropper = $t, t2;
  } }, { key: "setDefaults", value: function(t3) {
    dt(_, rt(t3) && t3);
  } }], (i2 = [{ key: "init", value: function() {
    var t3, e3 = this.element, i3 = e3.tagName.toLowerCase();
    if (!e3[d]) {
      if (e3[d] = this, "img" === i3) {
        if (this.isImg = true, t3 = e3.getAttribute("src") || "", this.originalUrl = t3, !t3)
          return;
        t3 = e3.src;
      } else
        "canvas" === i3 && window.HTMLCanvasElement && (t3 = e3.toDataURL());
      this.load(t3);
    }
  } }, { key: "load", value: function(t3) {
    var e3 = this;
    if (t3) {
      this.url = t3, this.imageData = {};
      var i3 = this.element, a2 = this.options;
      if (a2.rotatable || a2.scalable || (a2.checkOrientation = false), a2.checkOrientation && window.ArrayBuffer)
        if (V.test(t3))
          F.test(t3) ? this.read((n3 = t3.replace(Rt, ""), o2 = atob(n3), r2 = new ArrayBuffer(o2.length), lt(h2 = new Uint8Array(r2), function(t4, e4) {
            h2[e4] = o2.charCodeAt(e4);
          }), r2)) : this.clone();
        else {
          var n3, o2, r2, h2, s2 = new XMLHttpRequest(), c2 = this.clone.bind(this);
          this.reloading = true, this.xhr = s2, s2.onabort = c2, s2.onerror = c2, s2.ontimeout = c2, s2.onprogress = function() {
            s2.getResponseHeader("content-type") !== Z && s2.abort();
          }, s2.onload = function() {
            e3.read(s2.response);
          }, s2.onloadend = function() {
            e3.reloading = false, e3.xhr = null;
          }, a2.checkCrossOrigin && Ht(t3) && i3.crossOrigin && (t3 = Nt(t3)), s2.open("GET", t3, true), s2.responseType = "arraybuffer", s2.withCredentials = "use-credentials" === i3.crossOrigin, s2.send();
        }
      else
        this.clone();
    }
  } }, { key: "read", value: function(t3) {
    var e3 = this.options, i3 = this.imageData, a2 = St(t3), n3 = 0, o2 = 1, r2 = 1;
    if (a2 > 1) {
      this.url = function(t4, e4) {
        for (var i4 = [], a3 = new Uint8Array(t4); a3.length > 0; )
          i4.push(Xt.apply(null, ct(a3.subarray(0, 8192)))), a3 = a3.subarray(8192);
        return "data:".concat(e4, ";base64,").concat(btoa(i4.join("")));
      }(t3, Z);
      var h2 = function(t4) {
        var e4 = 0, i4 = 1, a3 = 1;
        switch (t4) {
          case 2:
            i4 = -1;
            break;
          case 3:
            e4 = -180;
            break;
          case 4:
            a3 = -1;
            break;
          case 5:
            e4 = 90, a3 = -1;
            break;
          case 6:
            e4 = 90;
            break;
          case 7:
            e4 = 90, i4 = -1;
            break;
          case 8:
            e4 = -90;
        }
        return { rotate: e4, scaleX: i4, scaleY: a3 };
      }(a2);
      n3 = h2.rotate, o2 = h2.scaleX, r2 = h2.scaleY;
    }
    e3.rotatable && (i3.rotate = n3), e3.scalable && (i3.scaleX = o2, i3.scaleY = r2), this.clone();
  } }, { key: "clone", value: function() {
    var t3 = this.element, e3 = this.url, i3 = t3.crossOrigin, a2 = e3;
    this.options.checkCrossOrigin && Ht(e3) && (i3 || (i3 = "anonymous"), a2 = Nt(e3)), this.crossOrigin = i3, this.crossOriginUrl = a2;
    var n3 = document.createElement("img");
    i3 && (n3.crossOrigin = i3), n3.src = a2 || e3, n3.alt = t3.alt || "The image to crop", this.image = n3, n3.onload = this.start.bind(this), n3.onerror = this.stop.bind(this), ft(n3, O), t3.parentNode.insertBefore(n3, t3.nextSibling);
  } }, { key: "start", value: function() {
    var t3 = this, e3 = this.image;
    e3.onload = null, e3.onerror = null, this.sizing = true;
    var i3 = s.navigator && /(?:iPad|iPhone|iPod).*?AppleWebKit/i.test(s.navigator.userAgent), a2 = function(e4, i4) {
      dt(t3.imageData, { naturalWidth: e4, naturalHeight: i4, aspectRatio: e4 / i4 }), t3.initialImageData = dt({}, t3.imageData), t3.sizing = false, t3.sized = true, t3.build();
    };
    if (!e3.naturalWidth || i3) {
      var n3 = document.createElement("img"), o2 = document.body || document.documentElement;
      this.sizingImage = n3, n3.onload = function() {
        a2(n3.width, n3.height), i3 || o2.removeChild(n3);
      }, n3.src = e3.src, i3 || (n3.style.cssText = "left:0;max-height:none!important;max-width:none!important;min-height:0!important;min-width:0!important;opacity:0;position:absolute;top:0;z-index:-1;", o2.appendChild(n3));
    } else
      a2(e3.naturalWidth, e3.naturalHeight);
  } }, { key: "stop", value: function() {
    var t3 = this.image;
    t3.onload = null, t3.onerror = null, t3.parentNode.removeChild(t3), this.image = null;
  } }, { key: "build", value: function() {
    if (this.sized && !this.ready) {
      var t3 = this.element, e3 = this.options, i3 = this.image, a2 = t3.parentNode, n3 = document.createElement("div");
      n3.innerHTML = '<div class="cropper-container" touch-action="none"><div class="cropper-wrap-box"><div class="cropper-canvas"></div></div><div class="cropper-drag-box"></div><div class="cropper-crop-box"><span class="cropper-view-box"></span><span class="cropper-dashed dashed-h"></span><span class="cropper-dashed dashed-v"></span><span class="cropper-center"></span><span class="cropper-face"></span><span class="cropper-line line-e" data-cropper-action="e"></span><span class="cropper-line line-n" data-cropper-action="n"></span><span class="cropper-line line-w" data-cropper-action="w"></span><span class="cropper-line line-s" data-cropper-action="s"></span><span class="cropper-point point-e" data-cropper-action="e"></span><span class="cropper-point point-n" data-cropper-action="n"></span><span class="cropper-point point-w" data-cropper-action="w"></span><span class="cropper-point point-s" data-cropper-action="s"></span><span class="cropper-point point-ne" data-cropper-action="ne"></span><span class="cropper-point point-nw" data-cropper-action="nw"></span><span class="cropper-point point-sw" data-cropper-action="sw"></span><span class="cropper-point point-se" data-cropper-action="se"></span></div></div>';
      var o2 = n3.querySelector(".".concat(d, "-container")), r2 = o2.querySelector(".".concat(d, "-canvas")), h2 = o2.querySelector(".".concat(d, "-drag-box")), s2 = o2.querySelector(".".concat(d, "-crop-box")), c2 = s2.querySelector(".".concat(d, "-face"));
      this.container = a2, this.cropper = o2, this.canvas = r2, this.dragBox = h2, this.cropBox = s2, this.viewBox = o2.querySelector(".".concat(d, "-view-box")), this.face = c2, r2.appendChild(i3), ft(t3, k), a2.insertBefore(o2, t3.nextSibling), vt(i3, O), this.initPreview(), this.bind(), e3.initialAspectRatio = Math.max(0, e3.initialAspectRatio) || NaN, e3.aspectRatio = Math.max(0, e3.aspectRatio) || NaN, e3.viewMode = Math.max(0, Math.min(3, Math.round(e3.viewMode))) || 0, ft(s2, k), e3.guides || ft(s2.getElementsByClassName("".concat(d, "-dashed")), k), e3.center || ft(s2.getElementsByClassName("".concat(d, "-center")), k), e3.background && ft(o2, "".concat(d, "-bg")), e3.highlight || ft(c2, T), e3.cropBoxMovable && (ft(c2, W), Mt(c2, H, p)), e3.cropBoxResizable || (ft(s2.getElementsByClassName("".concat(d, "-line")), k), ft(s2.getElementsByClassName("".concat(d, "-point")), k)), this.render(), this.ready = true, this.setDragMode(e3.dragMode), e3.autoCrop && this.crop(), this.setData(e3.data), ht(e3.ready) && kt(t3, q, e3.ready, { once: true }), Ot(t3, q);
    }
  } }, { key: "unbuild", value: function() {
    if (this.ready) {
      this.ready = false, this.unbind(), this.resetPreview();
      var t3 = this.cropper.parentNode;
      t3 && t3.removeChild(this.cropper), vt(this.element, k);
    }
  } }, { key: "uncreate", value: function() {
    this.ready ? (this.unbuild(), this.ready = false, this.cropped = false) : this.sizing ? (this.sizingImage.onload = null, this.sizing = false, this.sized = false) : this.reloading ? (this.xhr.onabort = null, this.xhr.abort()) : this.image && this.stop();
  } }]) && a(e2.prototype, i2), n2 && a(e2, n2), Object.defineProperty(e2, "prototype", { writable: false }), t2;
}();
dt(Qt.prototype, At, jt, Pt, It, Ut, qt);
export { Qt as C };
