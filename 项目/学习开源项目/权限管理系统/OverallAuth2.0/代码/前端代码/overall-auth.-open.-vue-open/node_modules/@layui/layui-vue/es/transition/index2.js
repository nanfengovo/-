import { w as t } from "../utils/index.js";
import { defineComponent as e, inject as o, openBlock as a, createBlock as d, Transition as s, withCtx as l, renderSlot as n, useCssVars as i, ref as p, provide as y, createElementBlock as g, Fragment as r, createCommentVNode as f } from "vue";
const m = e({ name: "LayCollapseTransition", setup(t2) {
  const e2 = o("time"), i2 = `${e2}s height ease-in-out, ${e2}s padding-top ease-in-out, ${e2}s padding-bottom ease-in-out`, p2 = (t3) => {
    t3.style.transition = i2, t3.dataset || (t3.dataset = {}), t3.dataset.oldPaddingTop = t3.style.paddingTop, t3.dataset.oldPaddingBottom = t3.style.paddingBottom, t3.style.height = 0, t3.style.paddingTop = 0, t3.style.paddingBottom = 0;
  }, y2 = (t3) => {
    t3.dataset.oldOverflow = t3.style.overflow, 0 !== t3.scrollHeight ? (t3.style.height = t3.scrollHeight + "px", t3.style.paddingTop = t3.dataset.oldPaddingTop, t3.style.paddingBottom = t3.dataset.oldPaddingBottom) : (t3.style.height = "", t3.style.paddingTop = t3.dataset.oldPaddingTop, t3.style.paddingBottom = t3.dataset.oldPaddingBottom), t3.style.overflow = "hidden";
  }, g2 = (t3) => {
    t3.style.transition = "", t3.style.height = "", t3.style.overflow = t3.dataset.oldOverflow;
  }, r2 = (t3) => {
    t3.dataset || (t3.dataset = {}), t3.dataset.oldPaddingTop = t3.style.paddingTop, t3.dataset.oldPaddingBottom = t3.style.paddingBottom, t3.dataset.oldOverflow = t3.style.overflow;
    var e3 = getComputedStyle(t3, null);
    t3.style.height = t3.scrollHeight - parseInt(e3.paddingTop) - parseInt(e3.paddingBottom) + "px", t3.style.overflow = "hidden";
  }, f2 = (t3) => {
    0 !== t3.scrollHeight && (t3.style.transition = i2, t3.style.height = 0, t3.style.paddingTop = 0, t3.style.paddingBottom = 0);
  }, m2 = (t3) => {
    t3.style.transition = "", t3.style.height = "", t3.style.overflow = t3.dataset.oldOverflow, t3.style.paddingTop = t3.dataset.oldPaddingTop, t3.style.paddingBottom = t3.dataset.oldPaddingBottom;
  };
  return (t3, e3) => (a(), d(s, { onBeforeEnter: p2, onEnter: y2, onAfterEnter: g2, onBeforeLeave: r2, onLeave: f2, onAfterLeave: m2 }, { default: l(() => [n(t3.$slots, "default")]), _: 3 }));
} });
const u = e({ __name: "fadeTransition", setup(t2) {
  i((t3) => ({ ee595422: y2.value }));
  const e2 = o("time"), y2 = p(`opacity ${e2}s ease`);
  return (t3, e3) => (a(), d(s, { name: "fade" }, { default: l(() => [n(t3.$slots, "default")]), _: 3 }));
} }), h = e({ name: "LayTransition", props: { type: { default: "collapse" }, enable: { type: Boolean, default: true }, time: { default: 0.3 } }, setup: (t2) => (y("time", t2.time), (e2, o2) => t2.enable ? (a(), g(r, { key: 0 }, ["collapse" === t2.type ? (a(), d(m, { key: 0 }, { default: l(() => [n(e2.$slots, "default")]), _: 3 })) : f("", true), "fade" === t2.type ? (a(), d(u, { key: 1 }, { default: l(() => [n(e2.$slots, "default")]), _: 3 })) : f("", true)], 64)) : n(e2.$slots, "default", { key: 1 })) }), v = t(h);
export { h as _, v as c };
